<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
                    xmlns:controls="clr-namespace:RevitAddinManager.Themes.Controls"
                    xmlns:converters="clr-namespace:RevitAddinManager.Themes.Converters">

	<!-- Button -->

	<SolidColorBrush x:Key="ButtonForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="ButtonForegroundDisabled" Color="#FF6D6D6D" />
	<SolidColorBrush x:Key="ButtonBackground" Color="#373737" />
	<SolidColorBrush x:Key="ButtonDisabledBackground" Color="#373737" />
	<SolidColorBrush x:Key="ButtonMouseOverBackground" Color="#54545C" />
	<SolidColorBrush x:Key="ButtonMouseOverBorderBrush" Color="#54545C" />
	<SolidColorBrush x:Key="ButtonPressedBackground" Color="#007ACC" />
	<SolidColorBrush x:Key="ButtonPressedBorderBrush" Color="#1C97EA" />
	<SolidColorBrush x:Key="ButtonBorderBrush" Color="#434346" />
	<SolidColorBrush x:Key="ButtonBorderBrushDisabled" Color="#434346" />

	<!-- Calendar  -->

	<SolidColorBrush x:Key="CalendarDayTitleForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="CalendarBackground" Color="#FF252526" />
	<SolidColorBrush x:Key="CalendarForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="CalendarDisabledForeground" Color="#FF6D6D6D" />
	<SolidColorBrush x:Key="CalendarBorderBrush" Color="#FF3F3F46" />
	<SolidColorBrush x:Key="CalendarDayMonthYearIsTodayBackground" Color="#FF005995" />
	<SolidColorBrush x:Key="CalendarDayMonthYearSelectedForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="CalendarDayMonthYearSelectedBorderBrush" Color="#FF1C97EA" />
	<SolidColorBrush x:Key="CalendarDayMonthYearMouseOverBackground" Color="#FF3B3B3E" />
	<SolidColorBrush x:Key="CalendarDayMonthYearMouseOverForeground" Color="#FFE5E5E5" />

	<!-- ComboBox -->

	<SolidColorBrush x:Key="ComboBoxItemForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="ComboBoxItemDisabledForeground" Color="#FF6D6D6D" />
	<SolidColorBrush x:Key="ComboBoxItemSelectedForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="ComboBoxPopupBackground" Color="#1B1B1C" />
	<SolidColorBrush x:Key="ComboBoxPopupBorderBrush" Color="#333337" />
	<SolidColorBrush x:Key="ComboBoxItemMouseOverBackground" Color="#3E3E40" />
	<SolidColorBrush x:Key="ComboBoxItemSelectedBackground" Color="#FF005995" />
	<SolidColorBrush x:Key="ComboBoxMouseOverBorderBrush" Color="#007ACC" />
	<SolidColorBrush x:Key="ComboBoxExpandPathFill" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="ComboBoxExpandDisabledPathFill" Color="#FF666666" />
	<SolidColorBrush x:Key="ComboBoxExpandMouseOverPathFill" Color="#007ACC" />
	<SolidColorBrush x:Key="ComboBoxCaretBrush" Color="#FFE5E5E5" />

	<!-- ContextMenu -->

	<SolidColorBrush x:Key="ContextMenuForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="ContextMenuBackground" Color="#1B1B1C" />
	<SolidColorBrush x:Key="ContextMenuItemSeparator" Color="#333337" />
	<SolidColorBrush x:Key="ContextMenuBorderBrush" Color="#333337" />

	<!-- CheckBox -->

	<SolidColorBrush x:Key="CheckBoxFillPath" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="CheckBoxFillPathDisabled" Color="#FF6D6D6D" />
	<SolidColorBrush x:Key="CheckBoxBackground" Color="#373737" />
	<SolidColorBrush x:Key="CheckBoxBackgroundDisabled" Color="#373737" />
	<SolidColorBrush x:Key="CheckBoxBorderBrush" Color="#434346" />
	<SolidColorBrush x:Key="CheckBoxBorderBrushDisabled" Color="#434346" />
	<SolidColorBrush x:Key="CheckBoxPressedBackground" Color="#007ACC" />
	<SolidColorBrush x:Key="CheckBoxMouseOverBorderBrush" Color="#007ACC" />

	<!-- DataGrid -->

	<SolidColorBrush x:Key="DataGridForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="DataGridBorderBrush" Color="#3F3F46" />
	<SolidColorBrush x:Key="DataGridBackground" Color="#252526" />
	<SolidColorBrush x:Key="DataGridColumnHeaderForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="DataGridColumnHeaderBackground" Color="#2D2D30" />
	<SolidColorBrush x:Key="DataGridColumnHeaderDisabledBackground" Color="#2D2D30" />
	<SolidColorBrush x:Key="DataGridColumnHeaderDisabledBorderBrush" Color="#3F3F46" />
	<SolidColorBrush x:Key="DataGridColumnHeaderMouseOverBackground" Color="#3E3E40" />
	<SolidColorBrush x:Key="DataGridColumnHeaderPressedBackground" Color="#FF007ACC" />
	<SolidColorBrush x:Key="DataGridColumnHeaderSeparatorBackground" Color="#3F3F46" />
	<SolidColorBrush x:Key="DataGridCellForegroundDisabled" Color="#FF6D6D6D" />
	<SolidColorBrush x:Key="DataGridCellSelectedForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="DataGridCellSelectedBackground" Color="#FF005995" />
	<SolidColorBrush x:Key="DataGridCellSelectedBorderBrush" Color="#FF007ACC" />
	<SolidColorBrush x:Key="DataGridCellIsEditingForeground" Color="#FF040404" />
	<SolidColorBrush x:Key="DataGridCellIsEditingBorderBrush" Color="#FF040404" />
	<SolidColorBrush x:Key="DataGridCellIsEditingBackground" Color="#FFFFFF" />
	<SolidColorBrush x:Key="DataGridFloatingColumnHeaderBrush" Color="#FF3296FA" />
	<SolidColorBrush x:Key="DataGridLinesBorderBrush" Color="#3F3F46" />
	<SolidColorBrush x:Key="DataGridSortPathFill" Color="#7E7E7E" />

	<!-- Expander -->

	<SolidColorBrush x:Key="ExpanderForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="ExpanderDisabledForeground" Color="#FF838383" />
	<SolidColorBrush x:Key="ExpanderHeaderBackground" Color="#252526" />
	<SolidColorBrush x:Key="ExpanderBorderBrush" Color="#3F3F46" />
	<SolidColorBrush x:Key="ExpanderPathFill" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="ExpanderMouseOverPathFill" Color="#FF007ACC" />
	<SolidColorBrush x:Key="ExpanderDisabledPathFill" Color="#FF838383" />

	<!-- FocusVisual -->

	<SolidColorBrush x:Key="FocusVisualBorderBrush" Color="#FF007ACC" />

	<!-- GroupBox -->

	<SolidColorBrush x:Key="GroupBoxForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="GroupBoxHeaderForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="GroupBoxHeaderBackground" Color="#2D2D30" />
	<SolidColorBrush x:Key="GroupBoxBackground" Color="#252526" />
	<SolidColorBrush x:Key="GroupBoxBorderBrush" Color="#3F3F46" />

	<!-- GridSplitter -->

	<SolidColorBrush x:Key="GridSplitterBackground" Color="#FF212121" />

	<!-- HyperLink -->

	<SolidColorBrush x:Key="HyperLinkMouseOverForeground" Color="#007ACC" />

	<!-- ListBox -->

	<SolidColorBrush x:Key="ListBoxBackground" Color="#252526" />
	<SolidColorBrush x:Key="ListBoxBorderBrush" Color="#3F3F46" />
	<SolidColorBrush x:Key="ListBoxForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="ListBoxForegroundDisabled" Color="#FF838383" />
	<SolidColorBrush x:Key="ListBoxItemSelectedForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="ListBoxItemMouseOverForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="ListBoxDisabledBackground" Color="#FFF4F4F4" />
	<SolidColorBrush x:Key="ListBoxItemMouseOverBackground" Color="#FF3B3B3E" />
	<SolidColorBrush x:Key="ListBoxItemSelectedBackground" Color="#FF005995" />

	<!-- Menu -->

	<SolidColorBrush x:Key="MenuForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="MenuForegroundDisabled" Color="#FF838383" />

	<!-- MenuItem -->

	<SolidColorBrush x:Key="MenuItemDisabledForeground" Color="#FF838383" />
	<SolidColorBrush x:Key="MenuItemMouseOverBackground" Color="#3E3E40" />
	<SolidColorBrush x:Key="MenuItemPressedBackground" Color="#FF007ACC" />
	<SolidColorBrush x:Key="MenuItemCheckedBorderBrush" Color="#3399FF" />
	<SolidColorBrush x:Key="MenuItemCheckPathFill" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="MenuItemCheckDisabledPathFill" Color="#FF666666" />
	<SolidColorBrush x:Key="MenuItemOpenSubMenuPathFill" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="MenuItemOpenSubMenuMouseOverPathFill" Color="#FF007ACC" />
	<SolidColorBrush x:Key="MenuItemOpenSubMenuDisabledPathFill" Color="#FF666666" />

	<!-- ProgressBar -->

	<SolidColorBrush x:Key="ProgressBarBackground" Color="#373737" />
	<SolidColorBrush x:Key="ProgressBarDisabledBackground" Color="#373737" />
	<SolidColorBrush x:Key="ProgressBarBorderBrush" Color="#434346" />
	<SolidColorBrush x:Key="ProgressBarFill" Color="#FF0078D7" />
	<SolidColorBrush x:Key="ProgressBarDisabledFill" Color="#FF666666" />

	<!-- StatusBar -->

	<SolidColorBrush x:Key="StatusBarForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="StatusBarBackground" Color="#FF0078D7" />
	<SolidColorBrush x:Key="StatusBarSeparatorBackground" Color="#FFE5E5E5" />

	<!-- Slider -->

	<SolidColorBrush x:Key="SliderBackground" Color="#434346" />
	<SolidColorBrush x:Key="SliderBorderBrush" Color="#434346" />
	<SolidColorBrush x:Key="SliderThumbDisabledBackground" Color="#FFF4F4F4" />
	<SolidColorBrush x:Key="SliderThumbMouseOverBackground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="SliderThumbMouseOverBorderBrush" Color="#FF0078D7" />
	<SolidColorBrush x:Key="SliderThumbPressedBackground" Color="#FF007ACC" />
	<SolidColorBrush x:Key="SliderThumbPressedBorderBrush" Color="#434346" />
	<SolidColorBrush x:Key="SliderThumbBorderBrush" Color="#434346" />
	<SolidColorBrush x:Key="SliderThumbDisabledBorderBrush" Color="#FFADB2B5" />
	<SolidColorBrush x:Key="SliderTagsFill" Color="#FF3296FA" />
	<SolidColorBrush x:Key="SliderThumbFill" Color="#FFE5E5E5" />

	<!-- ScrollBar -->

	<SolidColorBrush x:Key="ScrollBarButtonBackground" Color="Transparent" />
	<SolidColorBrush x:Key="ScrollBarBackground" Color="#FF373737" />
	<SolidColorBrush x:Key="ScrollBarBorderBrush" Color="#FF434346" />
	<SolidColorBrush x:Key="ScrollBarPathFill" Color="#FF686868" />
	<SolidColorBrush x:Key="ScrollBarDisabledPathFill" Color="#FF666666" />
	<SolidColorBrush x:Key="ScrollBarMouseOverPathFill" Color="#FF0078D7" />
	<SolidColorBrush x:Key="ScrollBarPressedPathFill" Color="#FF007ACC" />
	<SolidColorBrush x:Key="ScrollBarThumbPathFill" Color="#FF686868" />
	<SolidColorBrush x:Key="ScrollBarThumbMouseOverFill" Color="#FF9E9E9E" />
	<SolidColorBrush x:Key="ScrollBarThumbPressedFill" Color="#FFEFEBEF" />

	<!--  TextBox  -->

	<SolidColorBrush x:Key="TextBoxForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="TextBoxForegroundDisabled" Color="#FF6D6D6D" />
	<SolidColorBrush x:Key="TextBoxBackground" Color="#373737" />
	<SolidColorBrush x:Key="TextBoxBackgroundDisabled" Color="#373737" />
	<SolidColorBrush x:Key="TextBoxBorderBrush" Color="#434346" />
	<SolidColorBrush x:Key="TextBoxBorderBrushDisabled" Color="#434346" />
	<SolidColorBrush x:Key="TextBoxSelectionBrush" Color="#FF0078D7" />
	<SolidColorBrush x:Key="TextBoxMouseOverBorderBrush" Color="#007ACC" />
	<SolidColorBrush x:Key="TextBoxIsEditingBorderBrush" Color="#FF3296FA" />
	<SolidColorBrush x:Key="TextBoxIsInactiveSelectionHighlightBrush" Color="#FF666666" />

	<!-- TextBlock -->

	<SolidColorBrush x:Key="TextBlockForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="TextBlockForegroundDisabled" Color="#FF6D6D6D" />

	<!-- ToolBar -->

	<SolidColorBrush x:Key="ToolBarOverflowPathFill" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="ToolBarOverflowDisabledPathFill" Color="#FF6D6D6D" />
	<SolidColorBrush x:Key="ToolBarThumbPathFill" Color="#FFE5E5E5" />

	<!-- TabControl -->

	<SolidColorBrush x:Key="TabControlForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="TabControlDisabledForeground" Color="#FF838383" />
	<SolidColorBrush x:Key="TabControlBackground" Color="#252526" />
	<SolidColorBrush x:Key="TabControlBorderBrush" Color="#3F3F46" />

	<!-- TabItem -->

	<SolidColorBrush x:Key="TabItemForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="TabItemMouseOverBackground" Color="#FF005995" />

	<!-- TreeView -->

	<SolidColorBrush x:Key="TreeViewForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="TreeViewForegroundDisabled" Color="#FF838383" />
	<SolidColorBrush x:Key="TreeViewItemSelectedForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="TreeViewBackground" Color="#252526" />
	<SolidColorBrush x:Key="TreeViewDisabledBackground" Color="#252526" />
	<SolidColorBrush x:Key="TreeViewItemSelectedBackground" Color="#FF005995" />
	<SolidColorBrush x:Key="TreeViewBorderBrush" Color="#3F3F46" />
	<SolidColorBrush x:Key="TreeViewExpandPathFill" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="TreeViewExpandMouseOverPathFill" Color="#FF0078D7" />

	<!-- ToolTip -->

	<SolidColorBrush x:Key="ToolTipForeground" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="ToolTipBackground" Color="#1B1B1C" />
	<SolidColorBrush x:Key="ToolTipBorderBrush" Color="#333337" />

	<!-- ToggleSwitch -->

	<SolidColorBrush x:Key="ToggleSwitchBackground" Color="#373737" />
	<SolidColorBrush x:Key="ToggleSwitchCheckedBackground" Color="#FF0078D7" />
	<SolidColorBrush x:Key="ToggleSwitchCheckedPathFill" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="ToggleSwitchCheckedMouseOverBackground" Color="#FF2D87E1" />
	<SolidColorBrush x:Key="ToggleSwitchCheckedPressedBackground" Color="#FF2162A5" />
	<SolidColorBrush x:Key="ToggleSwitchMouseOverBackground" Color="#54545C" />
	<SolidColorBrush x:Key="ToggleSwitchMouseOverBorderBrush" Color="#434346" />
	<SolidColorBrush x:Key="ToggleSwitchPressedBackground" Color="#FF007ACC" />
	<SolidColorBrush x:Key="ToggleSwitchPressedBorderBrush" Color="#FF2C628B" />
	<SolidColorBrush x:Key="ToggleSwitchDisabledBackground" Color="#FFF4F4F4" />
	<SolidColorBrush x:Key="ToggleSwitchBorderBrush" Color="#434346" />
	<SolidColorBrush x:Key="ToggleSwitchBrushDisabled" Color="#FFADB2B5" />
	<SolidColorBrush x:Key="ToggleSwitchPathFill" Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="ToggleSwitchDisabledPathFill" Color="#FF666666" />

	<!-- Window -->

	<SolidColorBrush x:Key="WindowBackground" Color="#2D2D30" />
	<SolidColorBrush x:Key="WindowForeground" Color="#FFE5E5E5" />
	<!-- UserControl -->

	<SolidColorBrush x:Key="UserControlBackground" Color="#2D2D30" />
	<SolidColorBrush x:Key="UserControlForeground" Color="#FFE5E5E5" />
	<!--  Various  -->

	<CornerRadius x:Key="ButtonCornerRadius">0</CornerRadius>

	<!--  Path  -->

	<PathGeometry x:Key="PathDataArrowUp" Figures="M1,4.5 L4.5,1 L8,4.5" />
	<PathGeometry x:Key="PathDataArrowDown" Figures="M1,1.5 L4.5,5 L8,1.5" />
	<PathGeometry x:Key="PathDataArrowRight" Figures="M1,7.5 L4.5,4 L1,0.5" />
	<PathGeometry x:Key="PathDataArrowLeft" Figures="M5,7.5 L1.5,4 L5,0.5" />

	<Style x:Key="ArrowPathStyle" TargetType="{x:Type Path}">
		<Setter Property="StrokeThickness" Value="2" />
		<Setter Property="SnapsToDevicePixels" Value="False" />
	</Style>

	<!--  Focus Visual  -->

	<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2"
                               SnapsToDevicePixels="true"
                               Stroke="{StaticResource FocusVisualBorderBrush}"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="OptionMarkFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="14,0,0,0"
                               SnapsToDevicePixels="true"
                               Stroke="{StaticResource FocusVisualBorderBrush}"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Window  -->

	<Style x:Key="WindowStyle" TargetType="{x:Type Window}">
		<Setter Property="Background" Value="{StaticResource WindowBackground}"/>
		<Setter Property="Foreground" Value="{StaticResource WindowForeground}"/>
	</Style>

	<!--  Text Block  -->

	<Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground" Value="{StaticResource TextBlockForeground}"/>
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="TextTrimming" Value="None"/>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource TextBlockForegroundDisabled}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--  Repeat Button  -->

	<Style TargetType="{x:Type RepeatButton}">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Background" Value="{StaticResource ButtonBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
		<Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="8,4,8,4" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
					<Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource ButtonCornerRadius}"
                            SnapsToDevicePixels="True">
						<ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="border" Property="Background" Value="{StaticResource ButtonMouseOverBackground}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ButtonMouseOverBorderBrush}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="border" Property="Background" Value="{StaticResource ButtonPressedBackground}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ButtonPressedBorderBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="border" Property="Background" Value="{StaticResource ButtonDisabledBackground}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ButtonBorderBrushDisabled}" />
							<Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ButtonForegroundDisabled}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Focusable" Value="false" />
		<Setter Property="IsTabStop" Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Fill="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="RepeatButtonForScrollBarStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Background" Value="{StaticResource ScrollBarButtonBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
		<Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border x:Name="border"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
						<ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Button  -->

	<Style TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Background" Value="{StaticResource ButtonBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
		<Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="8,4,8,4" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource ButtonCornerRadius}"
                            SnapsToDevicePixels="true">
						<ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDefaulted" Value="true">
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ButtonMouseOverBorderBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="border" Property="Background" Value="{StaticResource ButtonMouseOverBackground}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ButtonMouseOverBorderBrush}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="border" Property="Background" Value="{StaticResource ButtonPressedBackground}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ButtonPressedBorderBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="border" Property="Background" Value="{StaticResource ButtonDisabledBackground}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ButtonBorderBrushDisabled}" />
							<Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ButtonForegroundDisabled}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Calendar  -->

	<Style x:Key="CalendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CalendarDayButton}">
					<Border x:Name="TextBorder"
							    BorderThickness="1"
								BorderBrush="Transparent" 
								Background="Transparent">
						<Grid Margin="4,2,4,2" 
							    VerticalAlignment="Center" 
							    HorizontalAlignment="Center" 
							    Background="Transparent">
							<ContentPresenter x:Name="NormalText"
												  TextElement.Foreground="{StaticResource CalendarForeground}"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<Path x:Name="Blackout"
							        Data="M0,0 L20,10"
							        HorizontalAlignment="Center"  
							        Opacity="0"
							        Stroke="White"
							        StrokeThickness="1"
							        Stretch="Uniform" 
							        VerticalAlignment="Center"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="TextBorder" Value="{StaticResource CalendarDayMonthYearMouseOverBackground}"/>
							<Setter Property="TextElement.Foreground" TargetName="NormalText" Value="{StaticResource CalendarDayMonthYearMouseOverForeground}"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="BorderBrush" TargetName="TextBorder" Value="{StaticResource CalendarDayMonthYearSelectedBorderBrush}"/>
						</Trigger>
						<Trigger Property="IsToday" Value="True">
							<Setter Property="Background" TargetName="TextBorder" Value="{StaticResource CalendarDayMonthYearIsTodayBackground}"/>
							<Setter Property="TextElement.Foreground" TargetName="NormalText" Value="{StaticResource CalendarDayMonthYearSelectedForeground}"/>
						</Trigger>
						<Trigger Property="IsInactive" Value="True">
							<Setter Property="TextElement.Foreground" TargetName="NormalText" Value="{StaticResource CalendarDisabledForeground}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" TargetName="NormalText" Value="{StaticResource CalendarDisabledForeground}"/>
						</Trigger>
						<Trigger Property="IsBlackedOut" Value="True">
							<Setter Property="Opacity" TargetName="Blackout" Value="1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="CalendarButtonStyle" TargetType="{x:Type CalendarButton}">
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CalendarButton}">
					<Grid>
						<Border x:Name="TextBorder"
							    BorderThickness="1"
								BorderBrush="Transparent" 
								Background="Transparent">
							<ContentPresenter x:Name="NormalText" 
										      TextElement.Foreground="{StaticResource CalendarForeground}" 
										      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
										      Margin="1" 
										      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="TextBorder" Value="{StaticResource CalendarDayMonthYearMouseOverBackground}"/>
							<Setter Property="TextElement.Foreground" TargetName="NormalText" Value="{StaticResource CalendarDayMonthYearMouseOverForeground}"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="BorderBrush" TargetName="TextBorder" Value="{StaticResource CalendarDayMonthYearSelectedBorderBrush}"/>
							<Setter Property="TextElement.Foreground" TargetName="NormalText" Value="{StaticResource CalendarDayMonthYearSelectedForeground}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" TargetName="NormalText" Value="{StaticResource CalendarDisabledForeground}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="CalendarDayTitleTextBlockStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground" Value="{StaticResource CalendarDayTitleForeground}"/>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource CalendarDisabledForeground}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type CalendarItem}">
		<Setter Property="Margin" Value="0,3,0,3" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CalendarItem}">
					<ControlTemplate.Resources>
						<DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
							<TextBlock Margin="0,6,0,6"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontFamily="Verdana"
                                       FontSize="14"
                                       FontWeight="Normal"
                                       Style="{StaticResource CalendarDayTitleTextBlockStyle}"
                                       Text="{Binding}" >
							</TextBlock>
						</DataTemplate>
					</ControlTemplate.Resources>
					<Grid x:Name="PART_Root">
						<Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="1">
							<Border BorderBrush="Transparent"
                                    BorderThickness="2"
                                    CornerRadius="1">
								<Grid Margin="5,15,5,15">
									<Grid.Resources>
										<ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
											<Grid Background="Transparent" Cursor="Hand">
												<Path x:Name="path"
													  Margin="4"
                                                      HorizontalAlignment="Stretch"
                                                      VerticalAlignment="Stretch"
													  Style="{StaticResource ArrowPathStyle}"
                                                      Data="{StaticResource PathDataArrowUp}"
													  Stroke="{StaticResource ComboBoxExpandPathFill}"
                                                      Stretch="Uniform" />
											</Grid>
											<ControlTemplate.Triggers>
												<Trigger Property="IsMouseOver" Value="True">
													<Setter Property="Stroke" TargetName="path" Value="{StaticResource ComboBoxExpandMouseOverPathFill}"/>
												</Trigger>
												<Trigger Property="IsEnabled" Value="False">
													<Setter Property="Stroke" TargetName="path" Value="{StaticResource ComboBoxExpandDisabledPathFill}"/>
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
										<ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
											<Grid Background="Transparent" Cursor="Hand">
												<Path x:Name="path"
													  Margin="4"
                                                      HorizontalAlignment="Stretch"
                                                      VerticalAlignment="Stretch"
													  Style="{StaticResource ArrowPathStyle}"
                                                      Data="{StaticResource PathDataArrowDown}"
													  Stroke="{StaticResource ComboBoxExpandPathFill}"
                                                      Stretch="Uniform" />
											</Grid>
											<ControlTemplate.Triggers>
												<Trigger Property="IsMouseOver" Value="True">
													<Setter Property="Stroke" TargetName="path" Value="{StaticResource ComboBoxExpandMouseOverPathFill}"/>
												</Trigger>
												<Trigger Property="IsEnabled" Value="False">
													<Setter Property="Stroke" TargetName="path" Value="{StaticResource ComboBoxExpandDisabledPathFill}"/>
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
										<ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
											<Grid Cursor="Hand">
												<ContentPresenter x:Name="buttonContent"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Content="{TemplateBinding Content}"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                  TextElement.Foreground="{StaticResource CalendarForeground}" />
											</Grid>
											<ControlTemplate.Triggers>
												<Trigger Property="IsMouseOver" Value="True">
													<Setter Property="TextElement.Foreground" TargetName="buttonContent" Value="{StaticResource ComboBoxExpandMouseOverPathFill}"/>
												</Trigger>
												<Trigger Property="IsEnabled" Value="False">
													<Setter Property="TextElement.Foreground" TargetName="buttonContent" Value="{StaticResource CalendarDisabledForeground}"/>
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Grid.Resources>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>
									<Grid Margin="10,0,10,20"  Grid.Row="0">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Button x:Name="PART_HeaderButton"
                                            Grid.Column="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Focusable="False"
                                            FontSize="14"
                                            FontWeight="Normal"
                                            Template="{StaticResource HeaderButtonTemplate}" />
										<Button x:Name="PART_PreviousButton"
                                                Width="28"
												Grid.Column="1"
                                                HorizontalAlignment="Left"
                                                Focusable="False"
                                                Template="{StaticResource PreviousButtonTemplate}" />
										<Button x:Name="PART_NextButton"
												    Margin="5,0,0,0"
                                                    Width="28"
												Grid.Column="2"
                                                    HorizontalAlignment="Right"
                                                    Focusable="False"
                                                    Template="{StaticResource NextButtonTemplate}" />
									</Grid>
									<Grid x:Name="PART_MonthView"
                                          Grid.Row="1"
                                          Margin="0"
                                          HorizontalAlignment="Stretch"
                                          Visibility="Visible">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
									</Grid>
									<Grid x:Name="PART_YearView"
                                          Grid.Row="1"
                                          Margin="0"
                                          HorizontalAlignment="Stretch"
                                          Visibility="Hidden">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
									</Grid>
								</Grid>
							</Border>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
							<Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
							<Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
						</DataTrigger>
						<DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
							<Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
							<Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type Calendar}">
		<Setter Property="Background" Value="{StaticResource CalendarBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource CalendarBorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="CalendarDayButtonStyle" Value="{StaticResource CalendarDayButtonStyle}"/>
		<Setter Property="CalendarButtonStyle" Value="{StaticResource CalendarButtonStyle}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Calendar}">
					<StackPanel x:Name="PART_Root">
						<CalendarItem x:Name="PART_CalendarItem"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}" />
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ToggleSwitch -->

	<Style TargetType="{x:Type controls:ToggleSwitch}">
		<Setter Property="Width" Value="45"/>
		<Setter Property="Height" Value="20"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ToggleSwitch}">
					<Border x:Name="toggleSwitchBorder"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="{StaticResource ToggleSwitchBackground}"
                            BorderBrush="{StaticResource ToggleSwitchBorderBrush}"
                            BorderThickness="1"
                            CornerRadius="10"
                            SnapsToDevicePixels="True">
						<Ellipse x:Name="movableEllipse"
                                 Width="10"
                                 Height="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualWidth, Mode=OneWay}"
                                 Fill="{StaticResource ToggleSwitchPathFill}"
                                 StrokeThickness="0">
							<Ellipse.RenderTransform>
								<TranslateTransform X="-13" Y="0" />
							</Ellipse.RenderTransform>
						</Ellipse>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="toggleSwitchBorder" Property="Background" Value="{StaticResource ToggleSwitchCheckedBackground}" />
							<Setter TargetName="toggleSwitchBorder" Property="BorderThickness" Value="0" />
							<Setter TargetName="movableEllipse" Property="Fill" Value="{StaticResource ToggleSwitchCheckedPathFill}" />
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="checkBeginStoryboard">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="movableEllipse"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
											<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="12" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="uncheckBeginStoryboard">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="movableEllipse"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
											<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="-13" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="toggleSwitchBorder" Property="Background" Value="{StaticResource ToggleSwitchMouseOverBackground}" />
							<Setter TargetName="toggleSwitchBorder" Property="BorderBrush" Value="{StaticResource ToggleSwitchMouseOverBorderBrush}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="False" />
								<Condition Property="IsPressed" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="toggleSwitchBorder" Property="Background" Value="{StaticResource ToggleSwitchPressedBackground}" />
							<Setter TargetName="toggleSwitchBorder" Property="BorderBrush" Value="{StaticResource ToggleSwitchPressedBorderBrush}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="toggleSwitchBorder" Property="Background" Value="{StaticResource ToggleSwitchCheckedMouseOverBackground}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsPressed" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="toggleSwitchBorder" Property="Background" Value="{StaticResource ToggleSwitchCheckedPressedBackground}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="toggleSwitchBorder" Property="Background" Value="{StaticResource ToggleSwitchDisabledBackground}" />
							<Setter TargetName="toggleSwitchBorder" Property="BorderBrush" Value="{StaticResource ToggleSwitchBrushDisabled}" />
							<Setter TargetName="movableEllipse" Property="Fill" Value="{StaticResource ToggleSwitchDisabledPathFill}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  CheckBox  -->

	<Style TargetType="{x:Type CheckBox}">
		<Setter Property="MinHeight" Value="16" />
		<Setter Property="Height" Value="20" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Background" Value="{StaticResource CheckBoxBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrush}" />
		<Setter Property="Foreground" Value="{StaticResource TextBlockForeground}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Grid x:Name="templateRoot"
                          Margin="0"
                          Background="Transparent"
                          SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" MinWidth="16" />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Border x:Name="checkBoxBorder"
                                Width="16"
                                Height="16"
                                Margin="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
							<Grid x:Name="markGrid">
								<Path x:Name="optionMark"
                                      Margin="1"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                      Fill="{StaticResource CheckBoxFillPath}"
                                      Opacity="0"
                                      Stretch="None" />
							</Grid>
						</Border>
						<ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Margin="5,0,0,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasContent" Value="true">
							<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
							<Setter Property="Padding" Value="4,-1,0,0" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource CheckBoxMouseOverBorderBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrushDisabled}" />
							<Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource CheckBoxBackgroundDisabled}" />
							<Setter TargetName="optionMark" Property="Fill" Value="{StaticResource CheckBoxFillPathDisabled}" />
							<Setter Property="Foreground" Value="{StaticResource TextBlockForegroundDisabled}" />
						</Trigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="optionMark" Property="Opacity" Value="1" />
						</Trigger>
						<Trigger Property="IsChecked" Value="{x:Null}">
							<Setter TargetName="optionMark" Property="Data">
								<Setter.Value>
									<RectangleGeometry Rect="0,0,8,8"/>
								</Setter.Value>
							</Setter>
							<Setter TargetName="optionMark" Property="Opacity" Value="1" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  ComboBox  -->

	<Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="IsTabStop" Value="false" />
		<Setter Property="Focusable" Value="false" />
		<Setter Property="ClickMode" Value="Press" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="templateRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
						<Border x:Name="splitBorder"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                Margin="0"
                                HorizontalAlignment="Right"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1,0,0,0"
                                SnapsToDevicePixels="true">
							<Path x:Name="arrow"
                                  Margin="0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M1,1.5 L4.5,5 L8,1.5"
                                  Stroke="{StaticResource ComboBoxExpandPathFill}"
                                  StrokeThickness="2" />
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
							<Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
						</MultiDataTrigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource ComboBoxExpandMouseOverPathFill}" />
						</Trigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="arrow" Property="Data" Value="M1,4.5 L4.5,1 L8,4.5" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource ComboBoxExpandDisabledPathFill}" />
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBoxMouseOverBorderBrush}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBoxMouseOverBorderBrush}" />
							<Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBoxMouseOverBorderBrush}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource TextBoxBackgroundDisabled}" />
							<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource TextBoxBorderBrushDisabled}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource TextBoxBackgroundDisabled}" />
							<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource TextBoxBorderBrushDisabled}" />
							<Setter TargetName="splitBorder" Property="Background" Value="{StaticResource TextBoxBackgroundDisabled}" />
							<Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource TextBoxBorderBrushDisabled}" />
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
		<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
			</Grid.ColumnDefinitions>
			<Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   Margin="1"
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
				<Themes:SystemDropShadowChrome x:Name="shadow"
                                               MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                               MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                               Color="Transparent">
					<Border x:Name="dropDownBorder"
                            Background="{StaticResource ComboBoxPopupBackground}"
                            BorderBrush="{StaticResource ComboBoxPopupBorderBrush}"
                            BorderThickness="1">
						<ScrollViewer x:Name="DropDownScrollViewer">
							<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
								<Canvas x:Name="canvas"
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
									<Rectangle x:Name="opaqueRect"
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                               Fill="{Binding Background, ElementName=dropDownBorder}" />
								</Canvas>
								<ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</ScrollViewer>
					</Border>
				</Themes:SystemDropShadowChrome>
			</Popup>
			<ToggleButton x:Name="toggleButton"
                          Grid.ColumnSpan="2"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
			<ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              IsHitTestVisible="false"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
				<Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
				<Setter TargetName="shadow" Property="Color" Value="#71000000" />
			</Trigger>
			<Trigger Property="HasItems" Value="false">
				<Setter TargetName="dropDownBorder" Property="Height" Value="95" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsGrouping" Value="true" />
					<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
				</MultiTrigger.Conditions>
				<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
			</MultiTrigger>
			<Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
				<Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
				<Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
		<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
			</Grid.ColumnDefinitions>
			<Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
				<Themes:SystemDropShadowChrome x:Name="shadow"
                                               MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                               MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                               Color="Transparent">
					<Border x:Name="dropDownBorder"
                            Background="{StaticResource ComboBoxPopupBackground}"
                            BorderBrush="{StaticResource ComboBoxPopupBorderBrush}"
                            BorderThickness="1">
						<ScrollViewer x:Name="DropDownScrollViewer">
							<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
								<Canvas x:Name="canvas"
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
									<Rectangle x:Name="opaqueRect"
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                               Fill="{Binding Background, ElementName=dropDownBorder}" />
								</Canvas>
								<ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</ScrollViewer>
					</Border>
				</Themes:SystemDropShadowChrome>
			</Popup>
			<ToggleButton x:Name="toggleButton"
                          Grid.ColumnSpan="2"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
			<Border x:Name="border"
                    Margin="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}">
				<TextBox x:Name="PART_EditableTextBox"
                         Margin="{TemplateBinding Padding}"
                         BorderThickness="0"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                         IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsKeyboardFocusWithin" Value="true">
				<Setter Property="Foreground" Value="Black" />
			</Trigger>
			<Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
				<Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
				<Setter TargetName="shadow" Property="Color" Value="#71000000" />
			</Trigger>
			<Trigger Property="HasItems" Value="false">
				<Setter TargetName="dropDownBorder" Property="Height" Value="95" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsGrouping" Value="true" />
					<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
				</MultiTrigger.Conditions>
				<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
			</MultiTrigger>
			<Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
				<Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
				<Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style TargetType="{x:Type ComboBox}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Background" Value="{StaticResource TextBoxBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
		<Setter Property="Foreground" Value="{StaticResource TextBoxForeground}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="Padding" Value="6,3,5,3" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
		<Style.Triggers>
			<Trigger Property="IsEditable" Value="true">
				<Setter Property="IsTabStop" Value="false" />
				<Setter Property="Padding" Value="2" />
				<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="{StaticResource TextBoxBackgroundDisabled}" />
				<Setter Property="Foreground" Value="{StaticResource TextBoxForegroundDisabled}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type ComboBoxItem}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Padding" Value="4,1" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Foreground" Value="{StaticResource ComboBoxItemForeground}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border x:Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItemMouseOverBackground}" />
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItemSelectedBackground}" />
							<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource ComboBoxItemSelectedForeground}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource ComboBoxItemDisabledForeground}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Expander  -->

	<Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Padding="{TemplateBinding Padding}">
						<Grid Background="Transparent" SnapsToDevicePixels="False">
							<Grid.RowDefinitions>
								<RowDefinition Height="19" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid>
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="-90" />
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="{StaticResource PathDataArrowRight}"
                                      Stroke="{StaticResource ExpanderPathFill}"
                                      Style="{StaticResource ArrowPathStyle}" />
							</Grid>
							<ContentPresenter Grid.Row="1"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="arrow" Property="Data" Value="{StaticResource PathDataArrowLeft}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource ExpanderMouseOverPathFill}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource ExpanderDisabledPathFill}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Height="24"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0,1,0,0">
						<Grid Background="Transparent" SnapsToDevicePixels="False">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="24" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid>
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="180" />
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="{StaticResource PathDataArrowUp}"
                                      Stroke="{StaticResource ExpanderPathFill}"
                                      Style="{StaticResource ArrowPathStyle}" />
							</Grid>
							<ContentPresenter Grid.Column="1"
                                              Margin="0,0,0,1"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="arrow" Property="Data" Value="{StaticResource PathDataArrowDown}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource ExpanderMouseOverPathFill}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource ExpanderDisabledPathFill}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Padding="{TemplateBinding Padding}">
						<Grid Background="Transparent" SnapsToDevicePixels="False">
							<Grid.RowDefinitions>
								<RowDefinition Height="19" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid>
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="90" />
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="{StaticResource PathDataArrowLeft}"
                                      Stroke="{StaticResource ExpanderPathFill}"
                                      Style="{StaticResource ArrowPathStyle}" />
							</Grid>
							<ContentPresenter Grid.Row="1"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="arrow" Property="Data" Value="{StaticResource PathDataArrowRight}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource ExpanderMouseOverPathFill}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource ExpanderDisabledPathFill}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ExpanderHeaderFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Rectangle Margin="0"
                                   SnapsToDevicePixels="true"
                                   Stroke="Black"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="1" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Height="{TemplateBinding Height}"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0,0,0,0">
						<Grid Background="Transparent" SnapsToDevicePixels="False">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="24" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Path x:Name="arrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="{StaticResource PathDataArrowRight}"
                                  Stroke="{StaticResource ExpanderPathFill}"
                                  Style="{StaticResource ArrowPathStyle}" />
							<ContentPresenter Grid.Column="1"
                                              Margin="0,0,0,1"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="arrow" Property="Data" Value="{StaticResource PathDataArrowDown}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource ExpanderMouseOverPathFill}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource ExpanderDisabledPathFill}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type Expander}">
		<Setter Property="Foreground" Value="{DynamicResource ExpanderForeground}" />
		<Setter Property="Background" Value="{StaticResource ExpanderHeaderBackground}" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="BorderBrush" Value="{StaticResource ExpanderBorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="FontStyle" Value="Normal" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
						<DockPanel>
							<ToggleButton x:Name="HeaderSite"
                                          Height="23"
                                          MinWidth="0"
                                          MinHeight="0"
                                          Margin="0"
                                          Padding="0"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Background="{TemplateBinding Background}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          DockPanel.Dock="Top"
                                          FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource ExpanderDownHeaderStyle}" />
							<ContentPresenter x:Name="ExpandSite"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              DockPanel.Dock="Bottom"
                                              Focusable="false"
                                              Visibility="Collapsed" />
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="true">
							<Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Right">
							<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
							<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
							<Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Up">
							<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
							<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
							<Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Left">
							<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
							<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
							<Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource ExpanderDisabledForeground}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  GridSplitter  -->

	<Style x:Key="GridSplitterPreviewStyle">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Fill="{StaticResource GridSplitterBackground}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type GridSplitter}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GridSplitter}">
					<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  GroupBox  -->

	<Style TargetType="{x:Type GroupBox}">
		<Setter Property="Background" Value="{StaticResource GroupBoxBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource GroupBoxBorderBrush}" />
		<Setter Property="Foreground" Value="{StaticResource GroupBoxForeground}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid Grid.Row="0" Background="{StaticResource GroupBoxHeaderBackground}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<ContentPresenter Margin="4,2,2,4"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Header"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  TextElement.Foreground="{StaticResource GroupBoxHeaderForeground}" />
							</Grid>
							<ScrollViewer Grid.Row="1"
                                          VerticalAlignment="Stretch"
                                          Background="{TemplateBinding Background}"
                                          CanContentScroll="True"
                                          VerticalScrollBarVisibility="Auto">
								<ContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</ScrollViewer>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Label  -->

	<Style TargetType="{x:Type Label}">
		<Setter Property="Foreground" Value="{StaticResource TextBlockForeground}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource TextBlockForegroundDisabled}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  ListBox  -->

	<Style TargetType="{x:Type ListBox}">
		<Setter Property="Background" Value="{StaticResource ListBoxBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource ListBoxBorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Foreground" Value="{StaticResource ListBoxForeground}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border x:Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
						<ScrollViewer Padding="1" Focusable="false">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBoxDisabledBackground}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsGrouping" Value="true" />
								<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ListBoxItem}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border x:Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
						<ContentPresenter Margin="5,2,5,2"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBoxItemMouseOverBackground}" />
							<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource ListBoxItemMouseOverForeground}" />
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBoxItemSelectedBackground}" />
							<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource ListBoxItemSelectedForeground}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource ListBoxForegroundDisabled}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  ListView  -->

	<Style TargetType="{x:Type ListView}">
		<Setter Property="Background" Value="{StaticResource ListBoxBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource ListBoxBorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Foreground" Value="{StaticResource ListBoxForeground}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListView}">
					<Border x:Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
						<ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
							<Border Padding="1" Background="{StaticResource ListBoxBackground}">
								<ItemsPresenter />
							</Border>
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBoxDisabledBackground}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsGrouping" Value="true" />
								<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="ScrollViewer">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollViewer">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<DockPanel Margin="{TemplateBinding Padding}">
							<ScrollViewer DockPanel.Dock="Top"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden">
								<GridViewHeaderRowPresenter Margin="0"
                                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</ScrollViewer>

							<ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                                    CanContentScroll="True"
                                                    CanHorizontallyScroll="False"
                                                    CanVerticallyScroll="False"
                                                    KeyboardNavigation.DirectionalNavigation="Local" />
						</DockPanel>

						<ScrollBar Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{TemplateBinding HorizontalOffset}" />

						<ScrollBar Name="PART_VerticalScrollBar"
                                   Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{TemplateBinding VerticalOffset}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
		<Setter Property="Width" Value="18" />
		<Setter Property="Background" Value="{StaticResource DataGridColumnHeaderSeparatorBackground}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}"
                            Background="Transparent"
                            BorderThickness="0">
						<Rectangle Width="1"
                                   HorizontalAlignment="Center"
                                   Fill="{TemplateBinding Background}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type GridViewColumnHeader}">
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Foreground" Value="{StaticResource DataGridColumnHeaderForeground}" />
		<Setter Property="BorderBrush" Value="{StaticResource DataGridColumnHeaderSeparatorBackground}" />
		<Setter Property="Background" Value="{StaticResource DataGridColumnHeaderBackground}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridViewColumnHeader">
					<Grid>
						<Border x:Name="HeaderBorder"
                                Padding="2,1,2,1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0,0,0,1">
							<ContentPresenter x:Name="HeaderContent"
                                              Margin="0,0,0,1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
						<Thumb x:Name="PART_HeaderGripper"
                               Margin="0,0,-9,0"
                               HorizontalAlignment="Right"
                               Style="{StaticResource GridViewColumnHeaderGripper}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Pressed" />
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource DataGridColumnHeaderDisabledBackground}" />
							<Setter TargetName="HeaderBorder" Property="BorderBrush" Value="{StaticResource DataGridColumnHeaderDisabledBorderBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource DataGridColumnHeaderMouseOverBackground}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource DataGridColumnHeaderPressedBackground}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Role" Value="Floating">
				<Setter Property="Opacity" Value="0.7" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="GridViewColumnHeader">
							<Canvas Name="PART_FloatingHeaderCanvas">
								<Rectangle Width="{TemplateBinding ActualWidth}"
                                           Height="{TemplateBinding ActualHeight}"
                                           Fill="{StaticResource DataGridFloatingColumnHeaderBrush}" />
							</Canvas>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="Role" Value="Padding">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="GridViewColumnHeader">
							<Border Name="HeaderBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0,0,0,1" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type ListViewItem}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Border x:Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
						<GridViewRowPresenter Margin="0,2,0,2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBoxItemMouseOverBackground}" />
							<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource ListBoxItemMouseOverForeground}" />
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBoxItemSelectedBackground}" />
							<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource ListBoxItemSelectedForeground}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource ListBoxForegroundDisabled}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  ContextMenu  -->

	<Style TargetType="{x:Type ContextMenu}">
		<Setter Property="Background" Value="{StaticResource ContextMenuBackground}" />
		<Setter Property="Foreground" Value="{StaticResource ContextMenuForeground}" />
		<Setter Property="BorderBrush" Value="{StaticResource ContextMenuBorderBrush}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Grid.IsSharedSizeScope" Value="true" />
		<Setter Property="HasDropShadow" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<Themes:SystemDropShadowChrome Name="Shdw"
                                                   Themes:SystemDropShadowChrome.Color="Transparent"
                                                   Themes:SystemDropShadowChrome.CornerRadius="0"
                                                   SnapsToDevicePixels="True">
						<Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
							<ScrollViewer x:Name="ScrollViewer" VerticalScrollBarVisibility="Hidden">
								<ItemsPresenter />
							</ScrollViewer>
						</Border>
					</Themes:SystemDropShadowChrome>
					<ControlTemplate.Triggers>
						<Trigger Property="HasDropShadow" Value="True">
							<Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="Shdw" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Menu  -->

	<Style TargetType="{x:Type Menu}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
		<Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
		<Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
		<Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
		<Setter Property="Foreground" Value="{StaticResource MenuForeground}" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Menu}">
					<Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type MenuItem}">
		<Setter Property="Margin" Value="0" />
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Margin" Value="1,0,0,0" />
				<Setter Property="Padding" Value="6,1,6,1" />
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Margin" Value="1,0,0,0" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border x:Name="templateRoot"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1"
                SnapsToDevicePixels="True">
			<Grid VerticalAlignment="Center">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
                                  MinWidth="16"
                                  MinHeight="16"
                                  Margin="3"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Icon}"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<ContentPresenter x:Name="ContentPresenter"
                                  Grid.Column="1"
                                  Margin="{TemplateBinding Padding}"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Header}"
                                  ContentSource="Header"
                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<Popup x:Name="PART_Popup"
                       AllowsTransparency="True"
                       Focusable="False"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Bottom"
                       PlacementTarget="{Binding ElementName=templateRoot}"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
					<Themes:SystemDropShadowChrome Name="Shdw"
                                                   MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                   Margin="0,0,5,5"
                                                   Themes:SystemDropShadowChrome.Color="#71000000"
                                                   Themes:SystemDropShadowChrome.CornerRadius="0"
                                                   SnapsToDevicePixels="True">
						<Border x:Name="SubMenuBorder"
                                Padding="0"
                                Background="{StaticResource ContextMenuBackground}"
                                BorderBrush="{StaticResource ContextMenuBorderBrush}"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
							<ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
								<Grid RenderOptions.ClearTypeHint="Enabled">
									<Canvas x:Name="Canvas"
                                            Width="22"
                                            Height="Auto"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Stretch">
										<Rectangle x:Name="OpaqueRect"
                                                   Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                                   Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                                   Fill="{Binding Background, ElementName=SubMenuBorder}" />
									</Canvas>
									<ItemsPresenter x:Name="ItemsPresenter"
                                                    Grid.IsSharedSizeScope="True"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</Grid>
							</ScrollViewer>
						</Border>
					</Themes:SystemDropShadowChrome>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="True">
				<Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="Header" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Margin" Value="3" />
				<Setter TargetName="ContentPresenter" Property="Margin" Value="0" />
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItemCheckedBorderBrush}" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted" Value="True" />
					<Condition Property="IsChecked" Value="False" />
				</MultiTrigger.Conditions>
				<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItemMouseOverBackground}" />
			</MultiTrigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource MenuForegroundDisabled}" />
			</Trigger>
			<Trigger SourceName="SubMenuScrollViewer" Property="CanContentScroll" Value="False">
				<Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
				<Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
			</Trigger>
			<Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
				<Setter TargetName="templateRoot" Property="BorderThickness" Value="1,1,1,0" />
				<Setter TargetName="templateRoot" Property="BorderBrush" Value="{Binding BorderBrush, ElementName=SubMenuBorder}" />
				<Setter TargetName="templateRoot" Property="Background" Value="{Binding Background, ElementName=SubMenuBorder}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border x:Name="templateRoot"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1"
                SnapsToDevicePixels="True">
			<Grid VerticalAlignment="Center">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
                                  MinWidth="16"
                                  MinHeight="16"
                                  Margin="3"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Icon}"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<Path x:Name="GlyphPanel"
                      Margin="3"
                      VerticalAlignment="Center"
                      Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                      Fill="{TemplateBinding Foreground}"
                      FlowDirection="LeftToRight"
                      Visibility="Collapsed" />
				<ContentPresenter x:Name="ContentPresenter"
                                  Grid.Column="1"
                                  Margin="{TemplateBinding Padding}"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Header}"
                                  ContentSource="Header"
                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<Popup x:Name="PART_Popup"
                       AllowsTransparency="True"
                       Focusable="False"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Bottom"
                       PlacementTarget="{Binding ElementName=templateRoot}"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
					<Themes:SystemDropShadowChrome Name="Shdw"
                                                   Margin="0,0,5,5"
                                                   Themes:SystemDropShadowChrome.Color="#71000000"
                                                   Themes:SystemDropShadowChrome.CornerRadius="0"
                                                   SnapsToDevicePixels="True">
						<Border x:Name="SubMenuBorder"
                                Padding="0"
                                Background="{StaticResource ContextMenuBackground}"
                                BorderBrush="{StaticResource ContextMenuBorderBrush}"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
							<ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
								<Grid RenderOptions.ClearTypeHint="Enabled">
									<Canvas x:Name="Canvas"
                                            Width="22"
                                            Height="Auto"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Stretch">
										<Rectangle x:Name="OpaqueRect"
                                                   Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                                   Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                                   Fill="{Binding Background, ElementName=SubMenuBorder}" />
									</Canvas>
									<ItemsPresenter x:Name="ItemsPresenter"
                                                    Grid.IsSharedSizeScope="True"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</Grid>
							</ScrollViewer>
						</Border>
					</Themes:SystemDropShadowChrome>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="True">
				<Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="Header" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Margin" Value="3" />
				<Setter TargetName="ContentPresenter" Property="Margin" Value="0" />
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItemCheckedBorderBrush}" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItemPressedBackground}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted" Value="True" />
					<Condition Property="IsChecked" Value="False" />
				</MultiTrigger.Conditions>
				<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItemMouseOverBackground}" />
			</MultiTrigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource MenuForegroundDisabled}" />
				<Setter TargetName="Icon" Property="Opacity" Value="0.5" />
			</Trigger>
			<Trigger SourceName="SubMenuScrollViewer" Property="CanContentScroll" Value="False">
				<Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
				<Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
			</Trigger>
			<Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
				<Setter TargetName="templateRoot" Property="BorderThickness" Value="1,1,1,0" />
				<Setter TargetName="templateRoot" Property="BorderBrush" Value="{Binding BorderBrush, ElementName=SubMenuBorder}" />
				<Setter TargetName="templateRoot" Property="Background" Value="{Binding Background, ElementName=SubMenuBorder}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border x:Name="templateRoot"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"
                                      MinWidth="22"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
					<ColumnDefinition Width="6" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="30" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
					<ColumnDefinition Width="20" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
                                  Width="16"
                                  Height="16"
                                  Margin="6,3,0,3"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Icon}"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<Border x:Name="GlyphPanel"
                        Width="22"
                        Height="22"
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        Visibility="Hidden">
					<Path x:Name="Glyph"
                          Width="9"
                          Height="11"
                          Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                          Fill="{StaticResource MenuItemCheckPathFill}"
                          FlowDirection="LeftToRight" />
				</Border>
				<ContentPresenter Grid.Column="2"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Header}"
                                  ContentSource="Header"
                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<TextBlock Grid.Column="4"
                           Margin="{TemplateBinding Padding}"
                           VerticalAlignment="Center"
                           Opacity="0.7"
                           Text="{TemplateBinding InputGestureText}" />
				<Path x:Name="RightArrow"
                      Grid.Column="5"
                      Height="8"
                      Margin="10,0,0,0"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      Data="M0,0L4,4 0,8z"
                      Fill="{StaticResource MenuItemOpenSubMenuPathFill}"
                      UseLayoutRounding="False" />
				<Popup x:Name="PART_Popup"
                       AllowsTransparency="True"
                       Focusable="False"
                       HorizontalOffset="-2"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Right"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       VerticalOffset="-3">
					<Themes:SystemDropShadowChrome Name="Shdw"
                                                   Margin="0,0,5,5"
                                                   Themes:SystemDropShadowChrome.Color="#71000000"
                                                   Themes:SystemDropShadowChrome.CornerRadius="0"
                                                   SnapsToDevicePixels="True">
						<Border x:Name="SubMenuBorder"
                                Padding="0"
                                Background="{StaticResource ContextMenuBackground}"
                                BorderBrush="{StaticResource ContextMenuBorderBrush}"
                                BorderThickness="1">
							<ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
								<Grid RenderOptions.ClearTypeHint="Enabled">
									<Canvas x:Name="Canvas"
                                            Width="22"
                                            Height="Auto"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Stretch">
										<Rectangle x:Name="OpaqueRect"
                                                   Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                                   Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                                   Fill="{Binding Background, ElementName=SubMenuBorder}" />
									</Canvas>
									<ItemsPresenter x:Name="ItemsPresenter"
                                                    Grid.IsSharedSizeScope="True"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</Grid>
							</ScrollViewer>
						</Border>
					</Themes:SystemDropShadowChrome>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="True">
				<Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
				<Setter TargetName="RightArrow" Property="Fill" Value="{StaticResource MenuItemOpenSubMenuMouseOverPathFill}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource MenuItemDisabledForeground}" />
				<Setter TargetName="Glyph" Property="Fill" Value="{StaticResource MenuItemCheckDisabledPathFill}" />
				<Setter TargetName="RightArrow" Property="Fill" Value="{StaticResource MenuItemOpenSubMenuDisabledPathFill}" />
			</Trigger>
			<Trigger SourceName="SubMenuScrollViewer" Property="CanContentScroll" Value="False">
				<Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
				<Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border x:Name="templateRoot"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"
                                      MinWidth="22"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
					<ColumnDefinition Width="6" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="30" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
					<ColumnDefinition Width="20" />
				</Grid.ColumnDefinitions>
				<Border x:Name="IconBorder"
                        Width="22"
                        Height="22"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        ClipToBounds="False"
                        Visibility="Visible">
					<ContentPresenter x:Name="Icon"
                                      Width="16"
                                      Height="16"
                                      Margin="2"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Content="{TemplateBinding Icon}"
                                      ContentSource="Icon"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				</Border>
				<Border x:Name="GlyphPanel"
                        Width="22"
                        Height="22"
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        Visibility="Hidden">
					<Path x:Name="Glyph"
                          Width="10"
                          Height="11"
                          Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                          Fill="{StaticResource MenuItemCheckPathFill}"
                          FlowDirection="LeftToRight" />
				</Border>
				<ContentPresenter Grid.Column="2"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Header}"
                                  ContentSource="Header"
                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<TextBlock Grid.Column="4"
                           Margin="{TemplateBinding Padding}"
                           VerticalAlignment="Center"
                           Opacity="0.7"
                           Text="{TemplateBinding InputGestureText}" />
				<Popup x:Name="PART_Popup"
                       AllowsTransparency="True"
                       Focusable="False"
                       HorizontalOffset="-2"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Right"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       VerticalOffset="-3">
					<Border x:Name="SubMenuBorder"
                            Padding="0"
                            Background="{StaticResource ContextMenuBackground}"
                            BorderBrush="{StaticResource ContextMenuBorderBrush}"
                            BorderThickness="1">
						<ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas x:Name="Canvas"
                                        Width="22"
                                        Height="Auto"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Stretch">
									<Rectangle x:Name="OpaqueRect"
                                               Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                               Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                               Fill="{Binding Background, ElementName=SubMenuBorder}" />
								</Canvas>
								<ItemsPresenter x:Name="ItemsPresenter"
                                                Grid.IsSharedSizeScope="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="IconBorder" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="IconBorder" Property="BorderBrush" Value="{StaticResource MenuItemCheckedBorderBrush}" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Icon" Value="{x:Null}" />
					<Condition Property="IsChecked" Value="True" />
				</MultiTrigger.Conditions>
				<Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
			</MultiTrigger>
			<Trigger Property="IsSuspendingPopupAnimation" Value="True">
				<Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource MenuItemDisabledForeground}" />
				<Setter TargetName="IconBorder" Property="BorderBrush" Value="{StaticResource MenuItemCheckDisabledPathFill}" />
				<Setter TargetName="Glyph" Property="Fill" Value="{StaticResource MenuItemCheckDisabledPathFill}" />
			</Trigger>
			<Trigger SourceName="SubMenuScrollViewer" Property="CanContentScroll" Value="False">
				<Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
				<Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!--  Password Box  -->

	<Style TargetType="{x:Type PasswordBox}">
		<Setter Property="PasswordChar" Value="●" />
		<Setter Property="Background" Value="{StaticResource TextBoxBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
		<Setter Property="Foreground" Value="{StaticResource TextBoxForeground}" />
		<Setter Property="CaretBrush" Value="{StaticResource TextBoxForeground}" />
		<Setter Property="SelectionBrush" Value="{StaticResource TextBoxSelectionBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="AllowDrop" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="Padding" Value="0,1,0,1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type PasswordBox}">
					<Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
						<ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource TextBoxForegroundDisabled}" />
							<Setter TargetName="border" Property="Background" Value="{StaticResource TextBoxBackgroundDisabled}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBoxBorderBrushDisabled}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBoxMouseOverBorderBrush}" />
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBoxIsEditingBorderBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
					<Condition Property="IsSelectionActive" Value="false" />
				</MultiTrigger.Conditions>
				<Setter Property="SelectionBrush" Value="{StaticResource TextBoxIsInactiveSelectionHighlightBrush}" />
			</MultiTrigger>
		</Style.Triggers>
	</Style>

	<!--  ProgressBar  -->

	<Style TargetType="{x:Type ProgressBar}">
		<Setter Property="Foreground" Value="{StaticResource ProgressBarFill}" />
		<Setter Property="Background" Value="{StaticResource ProgressBarBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource ProgressBarBorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ProgressBar}">
					<Grid x:Name="TemplateRoot">
						<Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
						<Rectangle x:Name="PART_Track" />
						<Grid x:Name="PART_Indicator"
                              Margin="1"
                              HorizontalAlignment="Left"
                              ClipToBounds="true">
							<Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" />
							<Rectangle x:Name="Animation"
                                       Fill="{TemplateBinding Foreground}"
                                       RenderTransformOrigin="0.5,0.5">
								<Rectangle.RenderTransform>
									<TransformGroup>
										<ScaleTransform />
										<SkewTransform />
										<RotateTransform />
										<TranslateTransform />
									</TransformGroup>
								</Rectangle.RenderTransform>
							</Rectangle>
						</Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Determinate" />
								<VisualState x:Name="Indeterminate">
									<Storyboard RepeatBehavior="Forever">
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
											<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
											<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
										</DoubleAnimationUsingKeyFrames>
										<PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
											<EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
											<EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
											<EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
										</PointAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Orientation" Value="Vertical">
							<Setter TargetName="TemplateRoot" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsIndeterminate" Value="true">
							<Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{StaticResource ProgressBarDisabledFill}" />
							<Setter Property="Background" Value="{StaticResource ProgressBarDisabledBackground}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  RadioButton  -->

	<Style TargetType="{x:Type RadioButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Background" Value="{StaticResource CheckBoxBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrush}" />
		<Setter Property="Foreground" Value="{StaticResource TextBlockForeground}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="MinHeight" Value="16" />
		<Setter Property="Height" Value="20" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<Grid x:Name="templateRoot"
                          Background="Transparent"
                          SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" MinWidth="16" />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Border x:Name="radioButtonBorder"
                                Width="14"
                                Height="14"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="100">
							<Grid x:Name="markGrid" Margin="2">
								<Ellipse x:Name="optionMark"
                                         MinWidth="6"
                                         MinHeight="6"
                                         Fill="{StaticResource CheckBoxFillPath}"
                                         Opacity="0" />
							</Grid>
						</Border>
						<ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Margin="3,0,0,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasContent" Value="true">
							<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
							<Setter Property="Padding" Value="4,-1,0,0" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource CheckBoxMouseOverBorderBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource CheckBoxBackgroundDisabled}" />
							<Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrushDisabled}" />
							<Setter TargetName="optionMark" Property="Fill" Value="{StaticResource CheckBoxFillPathDisabled}" />
							<Setter Property="Foreground" Value="{StaticResource TextBlockForegroundDisabled}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsPressed" Value="true" />
								<Condition Property="IsChecked" Value="false" />
							</MultiTrigger.Conditions>
							<Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource CheckBoxPressedBackground}" />
						</MultiTrigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="optionMark" Property="Opacity" Value="1" />
						</Trigger>
						<Trigger Property="IsChecked" Value="{x:Null}">
							<Setter TargetName="optionMark" Property="Opacity" Value="0.56" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  RichTextBox  -->

	<Style TargetType="{x:Type RichTextBox}">
		<Style.Resources>
			<Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
				<Setter Property="OverridesDefaultStyle" Value="true" />
			</Style>
			<Style x:Key="{x:Type Hyperlink}"
                   BasedOn="{StaticResource {x:Type Hyperlink}}"
                   TargetType="{x:Type Hyperlink}">
				<Style.Triggers>
					<Trigger Property="IsMouseOver" Value="true">
						<Setter Property="Foreground" Value="Blue" />
					</Trigger>
					<Trigger Property="IsEnabled" Value="false">
						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
					</Trigger>
				</Style.Triggers>
			</Style>
		</Style.Resources>
		<Setter Property="MinWidth" Value="10" />
		<Setter Property="Background" Value="{StaticResource TextBoxBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
		<Setter Property="Foreground" Value="{StaticResource TextBoxForeground}" />
		<Setter Property="CaretBrush" Value="{StaticResource TextBoxForeground}" />
		<Setter Property="SelectionBrush" Value="{StaticResource TextBoxSelectionBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="AllowDrop" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBoxBase}">
					<Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
						<ScrollViewer x:Name="PART_ContentHost"
                                    Focusable="false"
                                    HorizontalScrollBarVisibility="Hidden"
                                    VerticalScrollBarVisibility="Hidden" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource TextBoxForegroundDisabled}" />
							<Setter TargetName="border" Property="Background" Value="{StaticResource TextBoxBackgroundDisabled}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBoxBorderBrushDisabled}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBoxMouseOverBorderBrush}" />
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBoxIsEditingBorderBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
					<Condition Property="IsSelectionActive" Value="false" />
				</MultiTrigger.Conditions>
				<Setter Property="SelectionBrush" Value="{StaticResource TextBoxIsInactiveSelectionHighlightBrush}" />
			</MultiTrigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type Hyperlink}">
		<Setter Property="Foreground" Value="{StaticResource TextBlockForeground}" />
		<Setter Property="TextDecorations" Value="Underline" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="Foreground" Value="{StaticResource HyperLinkMouseOverForeground}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{StaticResource TextBlockForegroundDisabled}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="true">
				<Setter Property="Cursor" Value="Hand" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--  ScrollBar  -->

	<Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Background" Value="{StaticResource ScrollBarThumbPathFill}" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Margin" Value="3,0,3,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Rectangle x:Name="rectangle"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Fill="{TemplateBinding Background}"
                               SnapsToDevicePixels="True" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBarThumbMouseOverFill}" />
						</Trigger>
						<Trigger Property="IsDragging" Value="True">
							<Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBarThumbPressedFill}" />
							<Setter Property="Foreground" Value="{StaticResource ScrollBarBorderBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Background" Value="{StaticResource ScrollBarThumbPathFill}" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Margin" Value="0,3,0,3" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Rectangle x:Name="rectangle"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Fill="{TemplateBinding Background}"
                               SnapsToDevicePixels="True" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBarThumbMouseOverFill}" />
						</Trigger>
						<Trigger Property="IsDragging" Value="True">
							<Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBarThumbPressedFill}" />
							<Setter Property="Foreground" Value="{StaticResource ScrollBarBorderBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ScrollBar}">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="True" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="false" />
		<Setter Property="Background" Value="{StaticResource ScrollBarBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource ScrollBarBorderBrush}" />
		<Setter Property="Foreground" Value="{StaticResource ScrollBarBorderBrush}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Width" Value="17" />
		<Setter Property="MinWidth" Value="17" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
						<Grid x:Name="Bg" SnapsToDevicePixels="true">
							<Grid.RowDefinitions>
								<RowDefinition Height="17" />
								<RowDefinition Height="0.00001*" />
								<RowDefinition Height="17" />
							</Grid.RowDefinitions>
							<RepeatButton x:Name="PART_LineUpButton"
                                          Background="{TemplateBinding Background}"
                                          BorderThickness="0"
                                          Command="{x:Static ScrollBar.LineUpCommand}"
                                          Style="{StaticResource RepeatButtonForScrollBarStyle}">
								<Path x:Name="ArrowTop"
                                      Margin="0"
                                      Data="{StaticResource PathDataArrowUp}"
                                      Stroke="{StaticResource ScrollBarPathFill}"
                                      Style="{StaticResource ArrowPathStyle}" />
							</RepeatButton>
							<Track x:Name="PART_Track"
                                   Grid.Row="1"
                                   IsDirectionReversed="true">
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb Style="{StaticResource ScrollBarThumbVertical}" />
								</Track.Thumb>
							</Track>
							<RepeatButton x:Name="PART_LineDownButton"
                                          Grid.Row="2"
                                          Background="{TemplateBinding Background}"
                                          BorderThickness="0"
                                          Command="{x:Static ScrollBar.LineDownCommand}"
                                          Style="{StaticResource RepeatButtonForScrollBarStyle}">
								<Path x:Name="ArrowBottom"
                                      Margin="0"
                                      Data="{StaticResource PathDataArrowDown}"
                                      Stroke="{StaticResource ScrollBarPathFill}"
                                      Style="{StaticResource ArrowPathStyle}" />
							</RepeatButton>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
								<Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="ArrowBottom" Property="Stroke" Value="{StaticResource ScrollBarPressedPathFill}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
								<Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="ArrowTop" Property="Stroke" Value="{StaticResource ScrollBarPressedPathFill}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
								<Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="ArrowBottom" Property="Stroke" Value="{StaticResource ScrollBarMouseOverPathFill}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
								<Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="ArrowTop" Property="Stroke" Value="{StaticResource ScrollBarMouseOverPathFill}" />
						</MultiDataTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="ArrowTop" Property="Stroke" Value="{StaticResource ScrollBarDisabledPathFill}" />
							<Setter TargetName="ArrowBottom" Property="Stroke" Value="{StaticResource ScrollBarDisabledPathFill}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto" />
				<Setter Property="Background" Value="{StaticResource ScrollBarBackground}" />
				<Setter Property="BorderBrush" Value="{StaticResource ScrollBarBorderBrush}" />
				<Setter Property="Foreground" Value="{StaticResource ScrollBarBorderBrush}" />
				<Setter Property="MinWidth" Value="0" />
				<Setter Property="Height" Value="17" />
				<Setter Property="MinHeight" Value="17" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
								<Grid x:Name="Bg" SnapsToDevicePixels="true">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="17" />
										<ColumnDefinition Width="0.00001*" />
										<ColumnDefinition Width="17" />
									</Grid.ColumnDefinitions>
									<RepeatButton x:Name="PART_LineLeftButton"
                                                  BorderThickness="0"
                                                  Command="{x:Static ScrollBar.LineLeftCommand}"
                                                  Style="{StaticResource RepeatButtonForScrollBarStyle}">
										<Grid>
											<Path x:Name="ArrowLeft"
                                                  Margin="0"
                                                  Data="{StaticResource PathDataArrowLeft}"
                                                  Stroke="{StaticResource ScrollBarPathFill}"
                                                  Style="{StaticResource ArrowPathStyle}" />
										</Grid>
									</RepeatButton>
									<Track x:Name="PART_Track" Grid.Column="1">
										<Track.DecreaseRepeatButton>
											<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}" />
										</Track.DecreaseRepeatButton>
										<Track.IncreaseRepeatButton>
											<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}" />
										</Track.IncreaseRepeatButton>
										<Track.Thumb>
											<Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
										</Track.Thumb>
									</Track>
									<RepeatButton x:Name="PART_LineRightButton"
                                                  Grid.Column="2"
                                                  BorderThickness="0"
                                                  Command="{x:Static ScrollBar.LineRightCommand}"
                                                  Style="{StaticResource RepeatButtonForScrollBarStyle}">
										<Path x:Name="ArrowRight"
                                              Margin="0"
                                              Data="{StaticResource PathDataArrowRight}"
                                              Stroke="{StaticResource ScrollBarPathFill}"
                                              Style="{StaticResource ArrowPathStyle}" />
									</RepeatButton>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowRight" Property="Stroke" Value="{StaticResource ScrollBarPressedPathFill}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowLeft" Property="Stroke" Value="{StaticResource ScrollBarPressedPathFill}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowRight" Property="Stroke" Value="{StaticResource ScrollBarMouseOverPathFill}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowLeft" Property="Stroke" Value="{StaticResource ScrollBarMouseOverPathFill}" />
								</MultiDataTrigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter TargetName="ArrowLeft" Property="Stroke" Value="{StaticResource ScrollBarDisabledPathFill}" />
									<Setter TargetName="ArrowRight" Property="Stroke" Value="{StaticResource ScrollBarDisabledPathFill}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--  ScrollViewer  -->

	<Style TargetType="{x:Type ScrollViewer}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid x:Name="Grid" Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Rectangle x:Name="Corner"
                                   Grid.Row="1"
                                   Grid.Column="1"
                                   Fill="Transparent" />
						<ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                Grid.Row="0"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding Padding}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False"
                                                CanVerticallyScroll="False"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}" />
						<ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.RowSpan="2"
                                   Grid.Column="1"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
						<ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="1"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Separator  -->

	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
		<Setter Property="Background" Value="{StaticResource ContextMenuItemSeparator}" />
		<Setter Property="Margin" Value="8,2,8,2" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Rectangle Height="1" Fill="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
		<Setter Property="Background" Value="{StaticResource StatusBarSeparatorBackground}" />
		<Setter Property="Width" Value="1" />
		<Setter Property="Margin" Value="0,4,0,4" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Rectangle Width="{TemplateBinding Width}"
                               Height="Auto"
                               Fill="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Slider  -->

	<ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
		<Grid HorizontalAlignment="Center"
              VerticalAlignment="Center"
              UseLayoutRounding="True">
			<Path x:Name="grip"
                  VerticalAlignment="Center"
                  Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z"
                  Fill="{StaticResource SliderThumbFill}"
                  SnapsToDevicePixels="True"
                  Stretch="Fill"
                  Stroke="{StaticResource SliderThumbBorderBrush}"
                  StrokeLineJoin="Round"
                  StrokeThickness="1"
                  UseLayoutRounding="True" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumbMouseOverBackground}" />
				<Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumbMouseOverBorderBrush}" />
			</Trigger>
			<Trigger Property="IsDragging" Value="true">
				<Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumbPressedBackground}" />
				<Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumbPressedBorderBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumbDisabledBackground}" />
				<Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumbDisabledBorderBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
		<Grid HorizontalAlignment="Center"
              VerticalAlignment="Center"
              UseLayoutRounding="True">
			<Path x:Name="grip"
                  VerticalAlignment="Center"
                  Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z"
                  Fill="{StaticResource SliderThumbFill}"
                  SnapsToDevicePixels="True"
                  Stretch="Fill"
                  Stroke="{StaticResource SliderThumbBorderBrush}"
                  StrokeLineJoin="Round"
                  StrokeThickness="1"
                  UseLayoutRounding="True" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumbMouseOverBackground}" />
				<Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumbMouseOverBorderBrush}" />
			</Trigger>
			<Trigger Property="IsDragging" Value="true">
				<Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumbPressedBackground}" />
				<Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumbPressedBorderBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumbDisabledBackground}" />
				<Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumbDisabledBorderBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
		<Grid Width="11"
              Margin="0"
              HorizontalAlignment="Center"
              VerticalAlignment="Stretch"
              UseLayoutRounding="True">
			<Rectangle x:Name="grip"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       Fill="{StaticResource SliderThumbFill}"
                       RadiusX="1"
                       RadiusY="1"
                       SnapsToDevicePixels="True"
                       Stroke="{StaticResource SliderThumbBorderBrush}"
                       StrokeLineJoin="Round"
                       StrokeThickness="1"
                       UseLayoutRounding="True" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumbMouseOverBackground}" />
				<Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumbMouseOverBorderBrush}" />
			</Trigger>
			<Trigger Property="IsDragging" Value="true">
				<Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumbPressedBackground}" />
				<Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumbPressedBorderBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumbDisabledBackground}" />
				<Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumbDisabledBorderBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
		<Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<TickBar x:Name="TopTick"
                         Grid.Row="0"
                         Height="4"
                         Margin="0,0,0,2"
                         Fill="{TemplateBinding Foreground}"
                         Placement="Top"
                         Visibility="Collapsed" />
				<TickBar x:Name="BottomTick"
                         Grid.Row="2"
                         Height="4"
                         Margin="0,2,0,0"
                         Fill="{TemplateBinding Foreground}"
                         Placement="Bottom"
                         Visibility="Collapsed" />
				<Border x:Name="TrackBackground"
                        Grid.Row="1"
                        Height="4.0"
                        Margin="5,0"
                        VerticalAlignment="center"
                        Background="{StaticResource SliderBackground}"
                        BorderBrush="{StaticResource SliderBorderBrush}"
                        BorderThickness="1">
					<Canvas Margin="-6,-1">
						<Rectangle x:Name="PART_SelectionRange"
                                   Height="4.0"
                                   Fill="Red"
                                   Visibility="Hidden" />
					</Canvas>
				</Border>
				<Track x:Name="PART_Track" Grid.Row="1">
					<Track.DecreaseRepeatButton>
						<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
					</Track.DecreaseRepeatButton>
					<Track.IncreaseRepeatButton>
						<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
					</Track.IncreaseRepeatButton>
					<Track.Thumb>
						<Thumb x:Name="Thumb"
                               Width="11"
                               Height="20"
                               VerticalAlignment="Center"
                               Focusable="False"
                               OverridesDefaultStyle="True"
                               Template="{StaticResource SliderThumbHorizontalDefault}" />
					</Track.Thumb>
				</Track>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="TickPlacement" Value="TopLeft">
				<Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
				<Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbHorizontalTop}" />
				<Setter TargetName="TrackBackground" Property="Margin" Value="5,2,5,0" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="BottomRight">
				<Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
				<Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbHorizontalBottom}" />
				<Setter TargetName="TrackBackground" Property="Margin" Value="5,0,5,2" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="Both">
				<Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
				<Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="IsSelectionRangeEnabled" Value="true">
				<Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="IsKeyboardFocused" Value="true">
				<Setter TargetName="Thumb" Property="Foreground" Value="Blue" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
		<Grid HorizontalAlignment="Center"
              VerticalAlignment="Center"
              UseLayoutRounding="True">
			<Path x:Name="grip"
                  Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z"
                  Fill="{StaticResource SliderThumbFill}"
                  SnapsToDevicePixels="True"
                  Stretch="Fill"
                  Stroke="{StaticResource SliderThumbBorderBrush}"
                  StrokeLineJoin="Round"
                  StrokeThickness="1" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumbMouseOverBackground}" />
				<Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumbMouseOverBorderBrush}" />
			</Trigger>
			<Trigger Property="IsDragging" Value="true">
				<Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumbPressedBackground}" />
				<Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumbPressedBorderBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumbDisabledBackground}" />
				<Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumbDisabledBorderBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
		<Grid HorizontalAlignment="Center"
              VerticalAlignment="Center"
              UseLayoutRounding="True">
			<Path x:Name="grip"
                  Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z"
                  Fill="{StaticResource SliderThumbFill}"
                  SnapsToDevicePixels="True"
                  Stretch="Fill"
                  Stroke="{StaticResource SliderThumbBorderBrush}"
                  StrokeLineJoin="Round" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumbMouseOverBackground}" />
				<Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumbMouseOverBorderBrush}" />
			</Trigger>
			<Trigger Property="IsDragging" Value="true">
				<Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumbPressedBackground}" />
				<Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumbPressedBorderBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumbDisabledBackground}" />
				<Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumbDisabledBorderBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
		<Grid HorizontalAlignment="Center"
              VerticalAlignment="Center"
              UseLayoutRounding="True">
			<Rectangle x:Name="grip"
                       Width="18"
                       Height="11"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       Fill="{StaticResource SliderThumbFill}"
                       RadiusX="1"
                       RadiusY="1"
                       SnapsToDevicePixels="True"
                       Stroke="{StaticResource SliderThumbBorderBrush}"
                       StrokeLineJoin="Round"
                       StrokeThickness="1"
                       UseLayoutRounding="True" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumbMouseOverBackground}" />
				<Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumbMouseOverBorderBrush}" />
			</Trigger>
			<Trigger Property="IsDragging" Value="true">
				<Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumbPressedBackground}" />
				<Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumbPressedBorderBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter TargetName="grip" Property="Fill" Value="{StaticResource SliderThumbDisabledBackground}" />
				<Setter TargetName="grip" Property="Stroke" Value="{StaticResource SliderThumbDisabledBorderBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
		<Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<TickBar x:Name="TopTick"
                         Grid.Column="0"
                         Width="4"
                         Margin="0,0,2,0"
                         Fill="{TemplateBinding Foreground}"
                         Placement="Left"
                         Visibility="Collapsed" />
				<TickBar x:Name="BottomTick"
                         Grid.Column="2"
                         Width="4"
                         Margin="2,0,0,0"
                         Fill="{TemplateBinding Foreground}"
                         Placement="Right"
                         Visibility="Collapsed" />
				<Border x:Name="TrackBackground"
                        Grid.Column="1"
                        Width="4.0"
                        Margin="0,5"
                        HorizontalAlignment="center"
                        Background="{StaticResource SliderBackground}"
                        BorderBrush="{StaticResource SliderBorderBrush}"
                        BorderThickness="1">
					<Canvas Margin="-1,-6">
						<Rectangle x:Name="PART_SelectionRange"
                                   Width="4.0"
                                   Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                   Visibility="Hidden" />
					</Canvas>
				</Border>
				<Track x:Name="PART_Track" Grid.Column="1">
					<Track.DecreaseRepeatButton>
						<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
					</Track.DecreaseRepeatButton>
					<Track.IncreaseRepeatButton>
						<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
					</Track.IncreaseRepeatButton>
					<Track.Thumb>
						<Thumb x:Name="Thumb"
                               Width="18"
                               Height="11"
                               VerticalAlignment="Top"
                               Focusable="False"
                               OverridesDefaultStyle="True"
                               Template="{StaticResource SliderThumbVerticalDefault}" />
					</Track.Thumb>
				</Track>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="TickPlacement" Value="TopLeft">
				<Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
				<Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbVerticalLeft}" />
				<Setter TargetName="TrackBackground" Property="Margin" Value="2,5,0,5" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="BottomRight">
				<Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
				<Setter TargetName="Thumb" Property="Template" Value="{StaticResource SliderThumbVerticalRight}" />
				<Setter TargetName="TrackBackground" Property="Margin" Value="0,5,2,5" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="Both">
				<Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
				<Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="IsSelectionRangeEnabled" Value="true">
				<Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="IsKeyboardFocused" Value="true">
				<Setter TargetName="Thumb" Property="Foreground" Value="Blue" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style TargetType="{x:Type Slider}">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="True" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Foreground" Value="{StaticResource SliderTagsFill}" />
		<Setter Property="Template" Value="{StaticResource SliderHorizontal}" />
		<Setter Property="Minimum" Value="0" />
		<Setter Property="Maximum" Value="100" />
		<Setter Property="Value" Value="0" />
		<Setter Property="IsSnapToTickEnabled" Value="True" />
		<Setter Property="IsMoveToPointEnabled" Value="True" />
		<Setter Property="SmallChange" Value="1" />
		<Setter Property="LargeChange" Value="5" />
		<Setter Property="Orientation" Value="Horizontal" />
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Template" Value="{StaticResource SliderVertical}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--  TabControl  -->

	<Style TargetType="{x:Type TabControl}">
		<Setter Property="Padding" Value="2" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Background" Value="{StaticResource TabControlBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource TabControlBorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Foreground" Value="{StaticResource TabControlForeground}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid x:Name="templateRoot"
                          ClipToBounds="true"
                          KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColumnDefinition0" />
							<ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="RowDefinition0" Height="Auto" />
							<RowDefinition x:Name="RowDefinition1" Height="*" />
						</Grid.RowDefinitions>
						<TabPanel x:Name="headerPanel"
                                  Grid.Row="0"
                                  Grid.Column="0"
                                  Margin="2,2,2,0"
                                  Panel.ZIndex="1"
                                  Background="Transparent"
                                  IsItemsHost="true"
                                  KeyboardNavigation.TabIndex="1" />
						<Border x:Name="contentPanel"
                                Grid.Row="1"
                                Grid.Column="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
							<ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter TargetName="headerPanel" Property="Grid.Row" Value="1" />
							<Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
							<Setter TargetName="RowDefinition0" Property="Height" Value="*" />
							<Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
							<Setter TargetName="headerPanel" Property="Margin" Value="2,0,2,2" />
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
							<Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
							<Setter TargetName="headerPanel" Property="Grid.Column" Value="0" />
							<Setter TargetName="contentPanel" Property="Grid.Column" Value="1" />
							<Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
							<Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
							<Setter TargetName="RowDefinition0" Property="Height" Value="*" />
							<Setter TargetName="RowDefinition1" Property="Height" Value="0" />
							<Setter TargetName="headerPanel" Property="Margin" Value="2,2,0,2" />
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
							<Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
							<Setter TargetName="headerPanel" Property="Grid.Column" Value="1" />
							<Setter TargetName="contentPanel" Property="Grid.Column" Value="0" />
							<Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
							<Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
							<Setter TargetName="RowDefinition0" Property="Height" Value="*" />
							<Setter TargetName="RowDefinition1" Property="Height" Value="0" />
							<Setter TargetName="headerPanel" Property="Margin" Value="0,2,2,2" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource TabControlDisabledForeground}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type TabItem}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Foreground" Value="{StaticResource TabItemForeground}" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="6,0,6,0" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
						<Border x:Name="mainBorder"
                                Margin="0"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1,1,1,0">
							<Border x:Name="innerBorder"
                                    Margin="-1"
                                    Background="Transparent"
                                    BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                    BorderThickness="1,1,1,0"
                                    Opacity="0" />
						</Border>
						<ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          ContentSource="Header"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Grid>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
							<Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
							<Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
							<Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
							<Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
							<Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
							<Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
							<Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
							<Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Padding" Value="6,5,6,5" />
							<Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Panel.ZIndex" Value="1" />
							<Setter Property="Margin" Value="-2,-2,0,-2" />
							<Setter Property="Padding" Value="6,1,6,2" />
							<Setter TargetName="innerBorder" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
							<Setter TargetName="innerBorder" Property="Opacity" Value="1" />
							<Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
							<Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Padding" Value="6,0,6,0" />
							<Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Panel.ZIndex" Value="1" />
							<Setter Property="Margin" Value="-2,0,-2,-2" />
							<Setter Property="Padding" Value="6,-1,6,3" />
							<Setter TargetName="innerBorder" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
							<Setter TargetName="innerBorder" Property="Opacity" Value="1" />
							<Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
							<Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Padding" Value="6,5,6,5" />
							<Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Panel.ZIndex" Value="1" />
							<Setter Property="Margin" Value="0,-2,-2,-2" />
							<Setter Property="Padding" Value="6,1,6,2" />
							<Setter TargetName="innerBorder" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
							<Setter TargetName="innerBorder" Property="Opacity" Value="1" />
							<Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
							<Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Padding" Value="6,2,6,0" />
							<Setter Property="Margin" Value="-2,-2,-2,0" />
							<Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
							<Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
								<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Panel.ZIndex" Value="1" />
							<Setter Property="Padding" Value="6,2,6,0" />
							<Setter Property="Margin" Value="-2,-2,-2,0" />
							<Setter TargetName="innerBorder" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
							<Setter TargetName="innerBorder" Property="Opacity" Value="1" />
							<Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
							<Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
						</MultiDataTrigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItemMouseOverBackground}" />
							<Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItemMouseOverBackground}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  TextBox  -->

	<Style TargetType="{x:Type TextBox}">
		<Setter Property="Background" Value="{StaticResource TextBoxBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
		<Setter Property="Foreground" Value="{StaticResource TextBoxForeground}" />
		<Setter Property="CaretBrush" Value="{StaticResource TextBoxForeground}" />
		<Setter Property="SelectionBrush" Value="{StaticResource TextBoxSelectionBrush}" />
		<Setter Property="SelectionOpacity" Value="0.7" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="AllowDrop" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="Padding" Value="0,1,0,1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
						<ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource TextBoxForegroundDisabled}" />
							<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrushDisabled}" />
							<Setter Property="Background" Value="{StaticResource TextBoxBackgroundDisabled}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBoxMouseOverBorderBrush}" />
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBoxIsEditingBorderBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
					<Condition Property="IsSelectionActive" Value="false" />
				</MultiTrigger.Conditions>
				<Setter Property="SelectionBrush" Value="{StaticResource TextBoxIsInactiveSelectionHighlightBrush}" />
			</MultiTrigger>
		</Style.Triggers>
	</Style>

	<!--  ToolBar  -->

	<Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Foreground" Value="{StaticResource ToolBarOverflowPathFill}" />
		<Setter Property="MinHeight" Value="0" />
		<Setter Property="MinWidth" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
						<Canvas Width="7"
                                Height="6"
                                Margin="0,4,4,4"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                SnapsToDevicePixels="true">
							<Path x:Name="LinePath"
                                  Data="M 1.5 0.5 L 1.5 6.5"
                                  Stroke="{TemplateBinding Foreground}" />
							<Path x:Name="ArrowPath"
                                  Data="M 3.5 0.5 L 7 3.5 L 3.5 6.5 Z"
                                  Fill="{TemplateBinding Foreground}" />
						</Canvas>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource ToolBarOverflowDisabledPathFill}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Foreground" Value="{StaticResource ToolBarOverflowPathFill}" />
		<Setter Property="MinHeight" Value="0" />
		<Setter Property="MinWidth" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="Bd"
                            Width="13"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
						<Canvas Width="6"
                                Height="7"
                                Margin="0,2,0,4"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Bottom"
                                SnapsToDevicePixels="true">
							<Path x:Name="LinePath"
                                  Data="M -0.5 0.5 L 5.5 0.5"
                                  Stroke="{TemplateBinding Foreground}" />
							<Path x:Name="ArrowPath"
                                  Data="M -0.5 3 L 5.5 3 L 2.5 6 Z"
                                  Fill="{TemplateBinding Foreground}" />
						</Canvas>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource ToolBarOverflowDisabledPathFill}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
						<Rectangle>
							<Rectangle.Fill>
								<DrawingBrush TileMode="Tile"
                                              Viewbox="0,0,2,2"
                                              ViewboxUnits="Absolute"
                                              Viewport="0,0,2,2"
                                              ViewportUnits="Absolute">
									<DrawingBrush.Drawing>
										<GeometryDrawing Brush="{StaticResource ToolBarThumbPathFill}" Geometry="M 0 0 L 0 1 L 1 1 L 1 0 z" />
									</DrawingBrush.Drawing>
								</DrawingBrush>
							</Rectangle.Fill>
						</Rectangle>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Cursor" Value="SizeAll" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ToolBar}">
		<Style.Resources>
			<Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="ToggleButton">
				<Setter Property="Padding" Value="4,0,4,0" />
				<Setter Property="Margin" Value="1,0,0,0" />
				<Setter Property="OverridesDefaultStyle" Value="True" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderBrush" Value="Transparent" />
				<Setter Property="HorizontalAlignment" Value="Center" />
				<Setter Property="VerticalAlignment" Value="Stretch" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<Border Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="true">
									<Setter Property="BorderBrush" Value="{StaticResource MenuItemCheckedBorderBrush}" />
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="BorderBrush" Value="{StaticResource MenuItemMouseOverBackground}" />
									<Setter Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
								</Trigger>
								<Trigger Property="IsKeyboardFocused" Value="true">
									<Setter Property="BorderBrush" Value="#80DADADA" />
									<Setter Property="Background" Value="#210080FF" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="true" />
										<Condition Property="IsChecked" Value="true" />
									</MultiTrigger.Conditions>
									<Setter Property="BorderBrush" Value="{StaticResource MenuItemCheckedBorderBrush}" />
									<Setter Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsKeyboardFocused" Value="true" />
										<Condition Property="IsChecked" Value="true" />
									</MultiTrigger.Conditions>
									<Setter Property="BorderBrush" Value="{StaticResource MenuItemCheckedBorderBrush}" />
									<Setter Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
								</MultiTrigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter Property="Background" Value="{StaticResource MenuItemPressedBackground}" />
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="{StaticResource MenuForegroundDisabled}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" TargetType="CheckBox">
				<Setter Property="Padding" Value="4,2,4,2" />
				<Setter Property="Margin" Value="1,0,0,0" />
				<Setter Property="OverridesDefaultStyle" Value="True" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderBrush" Value="Transparent" />
				<Setter Property="HorizontalAlignment" Value="Center" />
				<Setter Property="VerticalAlignment" Value="Stretch" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type CheckBox}">
							<Border Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="true">
									<Setter Property="BorderBrush" Value="{StaticResource MenuItemCheckedBorderBrush}" />
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="BorderBrush" Value="{StaticResource MenuItemMouseOverBackground}" />
									<Setter Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
								</Trigger>
								<Trigger Property="IsKeyboardFocused" Value="true">
									<Setter Property="BorderBrush" Value="#80DADADA" />
									<Setter Property="Background" Value="#210080FF" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="true" />
										<Condition Property="IsChecked" Value="true" />
									</MultiTrigger.Conditions>
									<Setter Property="BorderBrush" Value="{StaticResource MenuItemCheckedBorderBrush}" />
									<Setter Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsKeyboardFocused" Value="true" />
										<Condition Property="IsChecked" Value="true" />
									</MultiTrigger.Conditions>
									<Setter Property="BorderBrush" Value="{StaticResource MenuItemCheckedBorderBrush}" />
									<Setter Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
								</MultiTrigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter Property="Background" Value="{StaticResource MenuItemPressedBackground}" />
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="{StaticResource MenuForegroundDisabled}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" TargetType="ToggleButton">
				<Setter Property="Padding" Value="4,0,4,0" />
				<Setter Property="Margin" Value="1,0,0,0" />
				<Setter Property="OverridesDefaultStyle" Value="True" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderBrush" Value="Transparent" />
				<Setter Property="HorizontalAlignment" Value="Center" />
				<Setter Property="VerticalAlignment" Value="Stretch" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type RadioButton}">
							<Border Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="true">
									<Setter Property="BorderBrush" Value="{StaticResource MenuItemCheckedBorderBrush}" />
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="BorderBrush" Value="{StaticResource MenuItemMouseOverBackground}" />
									<Setter Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
								</Trigger>
								<Trigger Property="IsKeyboardFocused" Value="true">
									<Setter Property="BorderBrush" Value="#80DADADA" />
									<Setter Property="Background" Value="#210080FF" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="true" />
										<Condition Property="IsChecked" Value="true" />
									</MultiTrigger.Conditions>
									<Setter Property="BorderBrush" Value="{StaticResource MenuItemCheckedBorderBrush}" />
									<Setter Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsKeyboardFocused" Value="true" />
										<Condition Property="IsChecked" Value="true" />
									</MultiTrigger.Conditions>
									<Setter Property="BorderBrush" Value="{StaticResource MenuItemCheckedBorderBrush}" />
									<Setter Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
								</MultiTrigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter Property="Background" Value="{StaticResource MenuItemPressedBackground}" />
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="{StaticResource MenuForegroundDisabled}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="Button">
				<Setter Property="Padding" Value="4,2,4,2" />
				<Setter Property="Margin" Value="1,0,0,0" />
				<Setter Property="OverridesDefaultStyle" Value="True" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderBrush" Value="Transparent" />
				<Setter Property="HorizontalAlignment" Value="Center" />
				<Setter Property="VerticalAlignment" Value="Stretch" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Border Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="BorderBrush" Value="{StaticResource MenuItemMouseOverBackground}" />
									<Setter Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
								</Trigger>
								<Trigger Property="IsKeyboardFocused" Value="true">
									<Setter Property="BorderBrush" Value="#80DADADA" />
									<Setter Property="Background" Value="#210080FF" />
								</Trigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter Property="Background" Value="{StaticResource MenuItemPressedBackground}" />
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="{StaticResource MenuForegroundDisabled}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="MenuItem">
				<Setter Property="Margin" Value="1,0,0,0" />
				<Setter Property="Padding" Value="2,0,6,0" />
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
			</Style>
		</Style.Resources>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{StaticResource MenuForeground}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToolBar}">
					<Grid x:Name="Grid"
                          Margin="3,1,1,1"
                          SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="13" />
						</Grid.ColumnDefinitions>
						<Grid x:Name="OverflowGrid"
                              Grid.Column="1"
                              HorizontalAlignment="Right">
							<ToggleButton x:Name="OverflowButton"
                                          BorderThickness="1,1,1,0"
                                          ClickMode="Press"
                                          FocusVisualStyle="{x:Null}"
                                          IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          IsEnabled="{TemplateBinding HasOverflowItems}"
                                          Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" />
							<Popup x:Name="OverflowPopup"
                                   AllowsTransparency="true"
                                   Focusable="false"
                                   IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   StaysOpen="false">
								<Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
									<Border x:Name="ToolBarSubMenuBorder"
                                            Background="{StaticResource ContextMenuBackground}"
                                            BorderBrush="{StaticResource ContextMenuBorderBrush}"
                                            BorderThickness="1"
                                            RenderOptions.ClearTypeHint="Enabled">
										<ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                              Margin="1"
                                                              FocusVisualStyle="{x:Null}"
                                                              Focusable="true"
                                                              KeyboardNavigation.DirectionalNavigation="Cycle"
                                                              KeyboardNavigation.TabNavigation="Cycle"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              WrapWidth="400" />
									</Border>
								</Themes:SystemDropShadowChrome>
							</Popup>
						</Grid>
						<Border x:Name="MainPanelBorder"
                                Grid.Column="0"
                                MinHeight="26"
                                Margin="0"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
							<DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
								<Thumb x:Name="ToolBarThumb"
                                       Width="6"
                                       Margin="0,4,0,4"
                                       Style="{StaticResource ToolBarThumbStyle}" />
								<ContentPresenter x:Name="ToolBarHeader"
                                                  Margin="4,0,4,0"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								<ToolBarPanel x:Name="PART_ToolBarPanel"
                                              Margin="1"
                                              IsItemsHost="true"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</DockPanel>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasOverflowItems" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="OverflowButton" Property="Visibility" Value="Hidden" />
						</MultiTrigger>
						<Trigger Property="IsOverflowOpen" Value="true">
							<Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="false" />
							<Setter TargetName="OverflowButton" Property="Background" Value="{Binding Background, ElementName=ToolBarSubMenuBorder}" />
							<Setter TargetName="OverflowButton" Property="BorderBrush" Value="{Binding BorderBrush, ElementName=ToolBarSubMenuBorder}" />
						</Trigger>
						<Trigger Property="Header" Value="{x:Null}">
							<Setter TargetName="ToolBarHeader" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="ToolBarTray.IsLocked" Value="true">
							<Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger SourceName="OverflowPopup" Property="HasDropShadow" Value="true">
							<Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="true" />
							<Setter TargetName="Shdw" Property="Color" Value="#71000000" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource MenuForegroundDisabled}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToolBar}">
							<Grid x:Name="Grid"
                                  Margin="1"
                                  SnapsToDevicePixels="true">
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="15" />
								</Grid.RowDefinitions>
								<Grid x:Name="OverflowGrid"
                                      Grid.Row="1"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Bottom">
									<ToggleButton x:Name="OverflowButton"
                                                  BorderThickness="1,1,0,1"
                                                  ClickMode="Press"
                                                  FocusVisualStyle="{x:Null}"
                                                  IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  IsEnabled="{TemplateBinding HasOverflowItems}"
                                                  Style="{StaticResource ToolBarVerticalOverflowButtonStyle}" />
									<Popup x:Name="OverflowPopup"
                                           AllowsTransparency="true"
                                           Focusable="false"
                                           IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                           Placement="Right"
                                           PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                           StaysOpen="false">
										<Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
											<Border x:Name="ToolBarSubMenuBorder"
                                                    Background="{StaticResource ContextMenuBackground}"
                                                    BorderBrush="{StaticResource ContextMenuBorderBrush}"
                                                    BorderThickness="1"
                                                    RenderOptions.ClearTypeHint="Enabled">
												<ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                                      Margin="1"
                                                                      FocusVisualStyle="{x:Null}"
                                                                      Focusable="true"
                                                                      KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                      KeyboardNavigation.TabNavigation="Cycle"
                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                      WrapWidth="400" />
											</Border>
										</Themes:SystemDropShadowChrome>
									</Popup>
								</Grid>
								<Border x:Name="MainPanelBorder"
                                        Grid.Row="0"
                                        Margin="0"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
									<DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
										<Thumb x:Name="ToolBarThumb"
                                               Width="16"
                                               Height="6"
                                               Margin="0,1,0,0"
                                               Padding="0"
                                               HorizontalAlignment="Center"
                                               DockPanel.Dock="Top"
                                               Style="{StaticResource ToolBarThumbStyle}" />
										<ContentPresenter x:Name="ToolBarHeader"
                                                          Margin="0"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          ContentSource="Header"
                                                          DockPanel.Dock="Top"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
										<ToolBarPanel x:Name="PART_ToolBarPanel"
                                                      Margin="1"
                                                      IsItemsHost="true"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
									</DockPanel>
								</Border>
							</Grid>
							<ControlTemplate.Triggers>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="HasOverflowItems" Value="False" />
									</MultiTrigger.Conditions>
									<Setter TargetName="OverflowButton" Property="Visibility" Value="Hidden" />
								</MultiTrigger>
								<Trigger Property="IsOverflowOpen" Value="true">
									<Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="false" />
									<Setter TargetName="OverflowButton" Property="Background" Value="{Binding Background, ElementName=ToolBarSubMenuBorder}" />
									<Setter TargetName="OverflowButton" Property="BorderBrush" Value="{Binding BorderBrush, ElementName=ToolBarSubMenuBorder}" />
								</Trigger>
								<Trigger Property="Header" Value="{x:Null}">
									<Setter TargetName="ToolBarHeader" Property="Visibility" Value="Collapsed" />
								</Trigger>
								<Trigger Property="ToolBarTray.IsLocked" Value="true">
									<Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed" />
								</Trigger>
								<Trigger SourceName="OverflowPopup" Property="HasDropShadow" Value="true">
									<Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
									<Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="true" />
									<Setter TargetName="Shdw" Property="Color" Value="#71000000" />
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="{StaticResource MenuForegroundDisabled}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--  ToolBarTray  -->

	<Style TargetType="{x:Type ToolBarTray}">
		<Setter Property="Background" Value="Transparent" />
	</Style>

	<!--  ContextMenu  -->

	<ControlTemplate x:Key="ContextmenuStyle" TargetType="{x:Type ContextMenu}">
		<Border x:Name="Border"
                Background="{TemplateBinding Background}"
                BorderThickness="1">
			<ScrollViewer x:Name="ScrollViewer">
				<ItemsPresenter />
			</ScrollViewer>
		</Border>
	</ControlTemplate>

	<!--  ToolTip  -->

	<Style TargetType="{x:Type ToolTip}">
		<Setter Property="Background" Value="{StaticResource ToolTipBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource ToolTipBorderBrush}" />
		<Setter Property="Foreground" Value="{StaticResource ToolTipForeground}" />
		<Setter Property="MaxWidth" Value="800" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="HasDropShadow" Value="True" />
		<Setter Property="Placement" Value="MousePoint" />
		<Setter Property="PlacementRectangle" Value="10 10 5 5" />
		<Setter Property="HorizontalOffset" Value="15" />
		<Setter Property="VerticalOffset" Value="15" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToolTip">
					<Themes:SystemDropShadowChrome Name="Shdw"
                                                   Themes:SystemDropShadowChrome.Color="Transparent"
                                                   Themes:SystemDropShadowChrome.CornerRadius="0"
                                                   SnapsToDevicePixels="True">
						<Border Name="Border"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
							<ContentPresenter Margin="5"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Top">
								<ContentPresenter.Resources>
									<Style TargetType="{x:Type TextBlock}">
										<Setter Property="TextWrapping" Value="Wrap" />
										<Setter Property="TextTrimming" Value="CharacterEllipsis" />
										<Setter Property="TextAlignment" Value="Left" />
										<Setter Property="Foreground" Value="{StaticResource TextBlockForeground}" />
									</Style>
								</ContentPresenter.Resources>
							</ContentPresenter>
						</Border>
					</Themes:SystemDropShadowChrome>
					<ControlTemplate.Triggers>
						<Trigger Property="HasDropShadow" Value="True">
							<Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="Shdw" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  TreeView  -->

	<Style TargetType="{x:Type TreeView}">
		<Setter Property="Background" Value="{StaticResource TreeViewBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource TreeViewBorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeView}">
					<Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
						<ScrollViewer x:Name="_tv_scrollviewer_"
                                      Padding="{TemplateBinding Padding}"
                                      Background="{TemplateBinding Background}"
                                      CanContentScroll="false"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource TreeViewDisabledBackground}" />
						</Trigger>
						<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
							<Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="TreeViewItemFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Width" Value="16" />
		<Setter Property="Height" Value="16" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="Transparent">
						<Path x:Name="ExpandPath"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="{StaticResource PathDataArrowRight}"
                              Stroke="{StaticResource TreeViewExpandPathFill}"
                              Style="{StaticResource ArrowPathStyle}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="ExpandPath" Property="Data" Value="{StaticResource PathDataArrowDown}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewExpandMouseOverPathFill}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type TreeViewItem}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="Foreground" Value="{StaticResource TreeViewForeground}" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<ControlTemplate.Resources>
						<converters:TreeViewMarginConverter x:Key="lengthConverter" Length="19" />
					</ControlTemplate.Resources>
					<StackPanel>
						<Border Name="Bd"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
							<Grid Margin="{Binding Converter={StaticResource lengthConverter}, RelativeSource={RelativeSource TemplatedParent}}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="19" />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<ToggleButton x:Name="Expander"
                                              ClickMode="Press"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{StaticResource ExpandCollapseToggleStyle}" />
								<ContentPresenter x:Name="PART_Header"
                                                  Grid.Column="1"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Header" />
							</Grid>
						</Border>
						<ItemsPresenter x:Name="ItemsHost" />
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="False">
							<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems" Value="False">
							<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasHeader" Value="false" />
								<Condition Property="Width" Value="Auto" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasHeader" Value="false" />
								<Condition Property="Height" Value="Auto" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
						</MultiTrigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource TreeViewItemSelectedBackground}" />
							<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource TreeViewItemSelectedForeground}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource TreeViewForegroundDisabled}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Status Bar  -->

	<Style TargetType="{x:Type StatusBar}">
		<Setter Property="Background" Value="{StaticResource StatusBarBackground}" />
		<Setter Property="Foreground" Value="{StaticResource StatusBarForeground}" />
		<Setter Property="Height" Value="23" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type StatusBar}">
					<Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Data Grid  -->

	<Style x:Key="DataGridSelectAllButtonStylee" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Background" Value="{StaticResource DataGridColumnHeaderBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource DataGridColumnHeaderSeparatorBackground}" />
		<Setter Property="BorderThickness" Value="0,0,1,1" />
		<Setter Property="Margin" Value="0,0,0,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="Border.Background" Value="{StaticResource DataGridColumnHeaderMouseOverBackground}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="border" Property="Border.Background" Value="{StaticResource DataGridColumnHeaderPressedBackground}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="border" Property="Background" Value="{StaticResource DataGridColumnHeaderDisabledBackground}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DataGridColumnHeaderDisabledBorderBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

	<Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Height" Value="8" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Cursor" Value="SizeNS" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Width" Value="8" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Cursor" Value="SizeWE" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type DataGridRowHeader}">
		<Setter Property="Background" Value="{StaticResource DataGridColumnHeaderBackground}" />
		<Setter Property="BorderThickness" Value="0,0,1,1" />
		<Setter Property="MinWidth" Value="19" />
		<Setter Property="Width" Value="Auto" />
		<Setter Property="BorderBrush" Value="{StaticResource DataGridColumnHeaderSeparatorBackground}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridRowHeader}">
					<Grid>
						<Themes:DataGridHeaderBorder Padding="{TemplateBinding Padding}"
                                                     Background="{TemplateBinding Background}"
                                                     BorderBrush="{TemplateBinding BorderBrush}"
                                                     BorderThickness="{TemplateBinding BorderThickness}"
                                                     IsHovered="{TemplateBinding IsMouseOver}"
                                                     IsPressed="{TemplateBinding IsPressed}"
                                                     IsSelected="{TemplateBinding IsRowSelected}"
                                                     Orientation="Horizontal"
                                                     SeparatorBrush="{TemplateBinding SeparatorBrush}"
                                                     SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
							<ContentPresenter Margin="2,0,4,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Themes:DataGridHeaderBorder>
						<Thumb x:Name="PART_TopHeaderGripper"
                               VerticalAlignment="Top"
                               Style="{StaticResource RowHeaderGripperStyle}" />
						<Thumb x:Name="PART_BottomHeaderGripper"
                               VerticalAlignment="Bottom"
                               Style="{StaticResource RowHeaderGripperStyle}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type DataGridColumnHeader}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Foreground" Value="{StaticResource DataGridColumnHeaderForeground}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
					<Grid>
						<Border x:Name="br"
                                Grid.Column="1"
                                Padding="4,3,4,3"
                                Background="{StaticResource DataGridColumnHeaderBackground}"
                                BorderBrush="{StaticResource DataGridColumnHeaderSeparatorBackground}"
                                BorderThickness="0,0,1,1"
                                SnapsToDevicePixels="True">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<ContentPresenter Grid.Column="0"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								<Path x:Name="SortArrow"
                                      Grid.Column="1"
                                      Margin="4,0,1,0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="{StaticResource PathDataArrowDown}"
                                      Stroke="{StaticResource DataGridSortPathFill}"
                                      Style="{StaticResource ArrowPathStyle}"
                                      Visibility="Visible" />
							</Grid>
						</Border>
						<Thumb x:Name="PART_LeftHeaderGripper"
                               HorizontalAlignment="Left"
                               Style="{StaticResource ColumnHeaderGripperStyle}" />
						<Thumb x:Name="PART_RightHeaderGripper"
                               HorizontalAlignment="Right"
                               Style="{StaticResource ColumnHeaderGripperStyle}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="SortDirection" Value="{x:Null}">
							<Setter TargetName="SortArrow" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="SortDirection" Value="Ascending">
							<Setter TargetName="SortArrow" Property="Data" Value="{StaticResource PathDataArrowUp}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="br" Property="Border.Background" Value="{StaticResource DataGridColumnHeaderMouseOverBackground}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="br" Property="Border.Background" Value="{StaticResource DataGridColumnHeaderPressedBackground}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
					<Grid>
						<Border Background="{StaticResource DataGridColumnHeaderBackground}"
                                BorderBrush="{StaticResource DataGridColumnHeaderSeparatorBackground}"
                                BorderThickness="0,0,0,1"
                                IsHitTestVisible="False" />
						<ItemsPresenter Margin="0" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type DataGridCell}">
		<Style.Resources>
			<SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="{Binding Source={StaticResource DataGridCellIsEditingBackground}, Path=Color}"/>
			<SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}"  Color="{Binding Source={StaticResource DataGridCellIsEditingForeground}, Path=Color}"/>
		</Style.Resources>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridCell}">
					<Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
						<ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Foreground" Value="{StaticResource DataGridCellSelectedForeground}" />
				<Setter Property="BorderBrush" Value="{StaticResource DataGridCellSelectedBackground}" />
				<Setter Property="Background" Value="{StaticResource DataGridCellSelectedBackground}" />
			</Trigger>
			<Trigger Property="IsKeyboardFocusWithin" Value="True">
				<Setter Property="BorderBrush" Value="{StaticResource DataGridCellSelectedBorderBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource DataGridCellForegroundDisabled}" />
			</Trigger>
			<Trigger Property="IsEditing" Value="True">
				<Setter Property="Background" Value="{StaticResource DataGridCellIsEditingBackground}" />
				<Setter Property="BorderBrush" Value="{StaticResource DataGridCellIsEditingBorderBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type DataGridRow}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
		<Setter Property="ValidationErrorTemplate">
			<Setter.Value>
				<ControlTemplate>
					<TextBlock Margin="2,0,0,0"
                               VerticalAlignment="Center"
                               Foreground="Red"
                               Text="!" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridRow}">
					<Border x:Name="DGR_Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
						<SelectiveScrollingGrid>
							<SelectiveScrollingGrid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</SelectiveScrollingGrid.ColumnDefinitions>
							<SelectiveScrollingGrid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</SelectiveScrollingGrid.RowDefinitions>
							<DataGridCellsPresenter Grid.Column="1"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							<DataGridDetailsPresenter Grid.Row="1"
                                                      Grid.Column="1"
                                                      SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                      Visibility="{TemplateBinding DetailsVisibility}" />
							<DataGridRowHeader Grid.RowSpan="2"
                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                               Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
						</SelectiveScrollingGrid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsNewItem" Value="True">
				<Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type DataGrid}">
		<Setter Property="Background" Value="{StaticResource DataGridBackground}" />
		<Setter Property="Foreground" Value="{StaticResource DataGridForeground}" />
		<Setter Property="BorderBrush" Value="{StaticResource DataGridBorderBrush}" />
		<Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DataGridLinesBorderBrush}" />
		<Setter Property="VerticalGridLinesBrush" Value="{StaticResource DataGridLinesBorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="MinRowHeight" Value="21" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGrid}">
					<Border Padding="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
						<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
							<ScrollViewer.Template>
								<ControlTemplate TargetType="{x:Type ScrollViewer}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="*" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<Button Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"
                                                Command="ApplicationCommands.SelectAll"
                                                Focusable="False"
                                                Style="{StaticResource DataGridSelectAllButtonStylee}"
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
										<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Column="1"
                                                                        Grid.ColumnSpan="2"
                                                                        Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
										<ScrollContentPresenter Grid.Row="1"
                                                                Grid.ColumnSpan="2"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}" />
										<ScrollBar x:Name="PART_VerticalScrollBar"
                                                   Grid.Row="1"
                                                   Grid.RowSpan="1"
                                                   Grid.Column="2"
                                                   BorderBrush="{StaticResource DataGridLinesBorderBrush}"
                                                   BorderThickness="1,0,0,0"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
										<ScrollBar x:Name="PART_HorizontalScrollBar"
                                                   Grid.Row="2"
                                                   Grid.Column="0"
                                                   Grid.ColumnSpan="2"
                                                   BorderBrush="{StaticResource DataGridLinesBorderBrush}"
                                                   BorderThickness="0,1,0,0"
                                                   Maximum="{TemplateBinding ScrollableWidth}"
                                                   Orientation="Horizontal"
                                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
									</Grid>
								</ControlTemplate>
							</ScrollViewer.Template>
							<ItemsPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsGrouping" Value="true" />
					<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
				</MultiTrigger.Conditions>
				<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
			</MultiTrigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="StrechedDataGridStyle"
           BasedOn="{StaticResource {x:Type DataGrid}}"
           TargetType="{x:Type DataGrid}">
		<Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
	</Style>

</ResourceDictionary>